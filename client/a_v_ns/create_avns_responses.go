// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package a_v_ns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// CreateAVNSReader is a Reader for the CreateAVNS structure.
type CreateAVNSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAVNSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAVNSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateAVNSAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAVNSBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAVNSInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAVNSOK creates a CreateAVNSOK with default headers values
func NewCreateAVNSOK() *CreateAVNSOK {
	return &CreateAVNSOK{}
}

/*
CreateAVNSOK describes a response with status code 200, with default header values.

OK
*/
type CreateAVNSOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this create Avns o k response has a 2xx status code
func (o *CreateAVNSOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Avns o k response has a 3xx status code
func (o *CreateAVNSOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Avns o k response has a 4xx status code
func (o *CreateAVNSOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Avns o k response has a 5xx status code
func (o *CreateAVNSOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create Avns o k response a status code equal to that given
func (o *CreateAVNSOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateAVNSOK) Error() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsOK  %+v", 200, o.Payload)
}

func (o *CreateAVNSOK) String() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsOK  %+v", 200, o.Payload)
}

func (o *CreateAVNSOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *CreateAVNSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAVNSAccepted creates a CreateAVNSAccepted with default headers values
func NewCreateAVNSAccepted() *CreateAVNSAccepted {
	return &CreateAVNSAccepted{}
}

/*
CreateAVNSAccepted describes a response with status code 202, with default header values.

Accepted
*/
type CreateAVNSAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this create Avns accepted response has a 2xx status code
func (o *CreateAVNSAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Avns accepted response has a 3xx status code
func (o *CreateAVNSAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Avns accepted response has a 4xx status code
func (o *CreateAVNSAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Avns accepted response has a 5xx status code
func (o *CreateAVNSAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create Avns accepted response a status code equal to that given
func (o *CreateAVNSAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *CreateAVNSAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsAccepted  %+v", 202, o.Payload)
}

func (o *CreateAVNSAccepted) String() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsAccepted  %+v", 202, o.Payload)
}

func (o *CreateAVNSAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *CreateAVNSAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAVNSBadRequest creates a CreateAVNSBadRequest with default headers values
func NewCreateAVNSBadRequest() *CreateAVNSBadRequest {
	return &CreateAVNSBadRequest{}
}

/*
CreateAVNSBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateAVNSBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create Avns bad request response has a 2xx status code
func (o *CreateAVNSBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Avns bad request response has a 3xx status code
func (o *CreateAVNSBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Avns bad request response has a 4xx status code
func (o *CreateAVNSBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Avns bad request response has a 5xx status code
func (o *CreateAVNSBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create Avns bad request response a status code equal to that given
func (o *CreateAVNSBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateAVNSBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAVNSBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAVNSBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAVNSBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAVNSInternalServerError creates a CreateAVNSInternalServerError with default headers values
func NewCreateAVNSInternalServerError() *CreateAVNSInternalServerError {
	return &CreateAVNSInternalServerError{}
}

/*
CreateAVNSInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type CreateAVNSInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create Avns internal server error response has a 2xx status code
func (o *CreateAVNSInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Avns internal server error response has a 3xx status code
func (o *CreateAVNSInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Avns internal server error response has a 4xx status code
func (o *CreateAVNSInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Avns internal server error response has a 5xx status code
func (o *CreateAVNSInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create Avns internal server error response a status code equal to that given
func (o *CreateAVNSInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateAVNSInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAVNSInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/avns][%d] createAvnsInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAVNSInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAVNSInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
