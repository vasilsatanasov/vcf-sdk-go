// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETBundleReader is a Reader for the GETBundle structure.
type GETBundleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETBundleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETBundleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETBundleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETBundleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETBundleOK creates a GETBundleOK with default headers values
func NewGETBundleOK() *GETBundleOK {
	return &GETBundleOK{}
}

/*
GETBundleOK describes a response with status code 200, with default header values.

Ok
*/
type GETBundleOK struct {
	Payload *models.Bundle
}

// IsSuccess returns true when this get bundle o k response has a 2xx status code
func (o *GETBundleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bundle o k response has a 3xx status code
func (o *GETBundleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle o k response has a 4xx status code
func (o *GETBundleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bundle o k response has a 5xx status code
func (o *GETBundleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle o k response a status code equal to that given
func (o *GETBundleOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETBundleOK) Error() string {
	return fmt.Sprintf("[GET /v1/bundles/{id}][%d] getBundleOK  %+v", 200, o.Payload)
}

func (o *GETBundleOK) String() string {
	return fmt.Sprintf("[GET /v1/bundles/{id}][%d] getBundleOK  %+v", 200, o.Payload)
}

func (o *GETBundleOK) GetPayload() *models.Bundle {
	return o.Payload
}

func (o *GETBundleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Bundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETBundleNotFound creates a GETBundleNotFound with default headers values
func NewGETBundleNotFound() *GETBundleNotFound {
	return &GETBundleNotFound{}
}

/*
GETBundleNotFound describes a response with status code 404, with default header values.

Bundle Not Found
*/
type GETBundleNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get bundle not found response has a 2xx status code
func (o *GETBundleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bundle not found response has a 3xx status code
func (o *GETBundleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle not found response has a 4xx status code
func (o *GETBundleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bundle not found response has a 5xx status code
func (o *GETBundleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle not found response a status code equal to that given
func (o *GETBundleNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETBundleNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/bundles/{id}][%d] getBundleNotFound  %+v", 404, o.Payload)
}

func (o *GETBundleNotFound) String() string {
	return fmt.Sprintf("[GET /v1/bundles/{id}][%d] getBundleNotFound  %+v", 404, o.Payload)
}

func (o *GETBundleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETBundleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETBundleInternalServerError creates a GETBundleInternalServerError with default headers values
func NewGETBundleInternalServerError() *GETBundleInternalServerError {
	return &GETBundleInternalServerError{}
}

/*
GETBundleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETBundleInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get bundle internal server error response has a 2xx status code
func (o *GETBundleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bundle internal server error response has a 3xx status code
func (o *GETBundleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle internal server error response has a 4xx status code
func (o *GETBundleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bundle internal server error response has a 5xx status code
func (o *GETBundleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get bundle internal server error response a status code equal to that given
func (o *GETBundleInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETBundleInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/bundles/{id}][%d] getBundleInternalServerError  %+v", 500, o.Payload)
}

func (o *GETBundleInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/bundles/{id}][%d] getBundleInternalServerError  %+v", 500, o.Payload)
}

func (o *GETBundleInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETBundleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
