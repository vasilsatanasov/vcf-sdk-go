// Code generated by go-swagger; DO NOT EDIT.

package c_e_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GetCeipStatusReader is a Reader for the GetCeipStatus structure.
type GetCeipStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCeipStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCeipStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetCeipStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCeipStatusOK creates a GetCeipStatusOK with default headers values
func NewGetCeipStatusOK() *GetCeipStatusOK {
	return &GetCeipStatusOK{}
}

/*
GetCeipStatusOK describes a response with status code 200, with default header values.

Ok
*/
type GetCeipStatusOK struct {
	Payload *models.Ceip
}

// IsSuccess returns true when this get ceip status o k response has a 2xx status code
func (o *GetCeipStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ceip status o k response has a 3xx status code
func (o *GetCeipStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ceip status o k response has a 4xx status code
func (o *GetCeipStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ceip status o k response has a 5xx status code
func (o *GetCeipStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ceip status o k response a status code equal to that given
func (o *GetCeipStatusOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCeipStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/ceip][%d] getCeipStatusOK  %+v", 200, o.Payload)
}

func (o *GetCeipStatusOK) String() string {
	return fmt.Sprintf("[GET /v1/system/ceip][%d] getCeipStatusOK  %+v", 200, o.Payload)
}

func (o *GetCeipStatusOK) GetPayload() *models.Ceip {
	return o.Payload
}

func (o *GetCeipStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Ceip)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCeipStatusInternalServerError creates a GetCeipStatusInternalServerError with default headers values
func NewGetCeipStatusInternalServerError() *GetCeipStatusInternalServerError {
	return &GetCeipStatusInternalServerError{}
}

/*
GetCeipStatusInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetCeipStatusInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get ceip status internal server error response has a 2xx status code
func (o *GetCeipStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ceip status internal server error response has a 3xx status code
func (o *GetCeipStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ceip status internal server error response has a 4xx status code
func (o *GetCeipStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ceip status internal server error response has a 5xx status code
func (o *GetCeipStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get ceip status internal server error response a status code equal to that given
func (o *GetCeipStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCeipStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/ceip][%d] getCeipStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCeipStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/ceip][%d] getCeipStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCeipStatusInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCeipStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
