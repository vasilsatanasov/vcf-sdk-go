// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETCSRsReader is a Reader for the GETCSRs structure.
type GETCSRsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETCSRsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETCSRsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETCSRsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETCSRsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETCSRsOK creates a GETCSRsOK with default headers values
func NewGETCSRsOK() *GETCSRsOK {
	return &GETCSRsOK{}
}

/*
GETCSRsOK describes a response with status code 200, with default header values.

OK
*/
type GETCSRsOK struct {
	Payload *models.PageOfCSR
}

// IsSuccess returns true when this get c s rs o k response has a 2xx status code
func (o *GETCSRsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c s rs o k response has a 3xx status code
func (o *GETCSRsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s rs o k response has a 4xx status code
func (o *GETCSRsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s rs o k response has a 5xx status code
func (o *GETCSRsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s rs o k response a status code equal to that given
func (o *GETCSRsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETCSRsOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/csrs][%d] getCSRsOK  %+v", 200, o.Payload)
}

func (o *GETCSRsOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/csrs][%d] getCSRsOK  %+v", 200, o.Payload)
}

func (o *GETCSRsOK) GetPayload() *models.PageOfCSR {
	return o.Payload
}

func (o *GETCSRsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCSR)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCSRsNotFound creates a GETCSRsNotFound with default headers values
func NewGETCSRsNotFound() *GETCSRsNotFound {
	return &GETCSRsNotFound{}
}

/*
GETCSRsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GETCSRsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get c s rs not found response has a 2xx status code
func (o *GETCSRsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s rs not found response has a 3xx status code
func (o *GETCSRsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s rs not found response has a 4xx status code
func (o *GETCSRsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c s rs not found response has a 5xx status code
func (o *GETCSRsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get c s rs not found response a status code equal to that given
func (o *GETCSRsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETCSRsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/csrs][%d] getCSRsNotFound  %+v", 404, o.Payload)
}

func (o *GETCSRsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/csrs][%d] getCSRsNotFound  %+v", 404, o.Payload)
}

func (o *GETCSRsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCSRsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCSRsInternalServerError creates a GETCSRsInternalServerError with default headers values
func NewGETCSRsInternalServerError() *GETCSRsInternalServerError {
	return &GETCSRsInternalServerError{}
}

/*
GETCSRsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETCSRsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get c s rs internal server error response has a 2xx status code
func (o *GETCSRsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c s rs internal server error response has a 3xx status code
func (o *GETCSRsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c s rs internal server error response has a 4xx status code
func (o *GETCSRsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c s rs internal server error response has a 5xx status code
func (o *GETCSRsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get c s rs internal server error response a status code equal to that given
func (o *GETCSRsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETCSRsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/csrs][%d] getCSRsInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCSRsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/csrs][%d] getCSRsInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCSRsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCSRsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
