// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETCertificatesReader is a Reader for the GETCertificates structure.
type GETCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETCertificatesOK creates a GETCertificatesOK with default headers values
func NewGETCertificatesOK() *GETCertificatesOK {
	return &GETCertificatesOK{}
}

/*
GETCertificatesOK describes a response with status code 200, with default header values.

OK
*/
type GETCertificatesOK struct {
	Payload *models.PageOfCertificate
}

// IsSuccess returns true when this get certificates o k response has a 2xx status code
func (o *GETCertificatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get certificates o k response has a 3xx status code
func (o *GETCertificatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates o k response has a 4xx status code
func (o *GETCertificatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates o k response has a 5xx status code
func (o *GETCertificatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates o k response a status code equal to that given
func (o *GETCertificatesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETCertificatesOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesOK  %+v", 200, o.Payload)
}

func (o *GETCertificatesOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesOK  %+v", 200, o.Payload)
}

func (o *GETCertificatesOK) GetPayload() *models.PageOfCertificate {
	return o.Payload
}

func (o *GETCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCertificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCertificatesNotFound creates a GETCertificatesNotFound with default headers values
func NewGETCertificatesNotFound() *GETCertificatesNotFound {
	return &GETCertificatesNotFound{}
}

/*
GETCertificatesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GETCertificatesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get certificates not found response has a 2xx status code
func (o *GETCertificatesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificates not found response has a 3xx status code
func (o *GETCertificatesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates not found response has a 4xx status code
func (o *GETCertificatesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get certificates not found response has a 5xx status code
func (o *GETCertificatesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates not found response a status code equal to that given
func (o *GETCertificatesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETCertificatesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GETCertificatesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GETCertificatesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCertificatesInternalServerError creates a GETCertificatesInternalServerError with default headers values
func NewGETCertificatesInternalServerError() *GETCertificatesInternalServerError {
	return &GETCertificatesInternalServerError{}
}

/*
GETCertificatesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETCertificatesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get certificates internal server error response has a 2xx status code
func (o *GETCertificatesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificates internal server error response has a 3xx status code
func (o *GETCertificatesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates internal server error response has a 4xx status code
func (o *GETCertificatesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates internal server error response has a 5xx status code
func (o *GETCertificatesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get certificates internal server error response a status code equal to that given
func (o *GETCertificatesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCertificatesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCertificatesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
