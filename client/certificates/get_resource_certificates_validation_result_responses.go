// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetResourceCertificatesValidationResultReader is a Reader for the GetResourceCertificatesValidationResult structure.
type GetResourceCertificatesValidationResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceCertificatesValidationResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceCertificatesValidationResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetResourceCertificatesValidationResultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceCertificatesValidationResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetResourceCertificatesValidationResultOK creates a GetResourceCertificatesValidationResultOK with default headers values
func NewGetResourceCertificatesValidationResultOK() *GetResourceCertificatesValidationResultOK {
	return &GetResourceCertificatesValidationResultOK{}
}

/*
GetResourceCertificatesValidationResultOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceCertificatesValidationResultOK struct {
	Payload *models.CertificateValidationTask
}

// IsSuccess returns true when this get resource certificates validation result o k response has a 2xx status code
func (o *GetResourceCertificatesValidationResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource certificates validation result o k response has a 3xx status code
func (o *GetResourceCertificatesValidationResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource certificates validation result o k response has a 4xx status code
func (o *GetResourceCertificatesValidationResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource certificates validation result o k response has a 5xx status code
func (o *GetResourceCertificatesValidationResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource certificates validation result o k response a status code equal to that given
func (o *GetResourceCertificatesValidationResultOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetResourceCertificatesValidationResultOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationResultOK  %+v", 200, o.Payload)
}

func (o *GetResourceCertificatesValidationResultOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationResultOK  %+v", 200, o.Payload)
}

func (o *GetResourceCertificatesValidationResultOK) GetPayload() *models.CertificateValidationTask {
	return o.Payload
}

func (o *GetResourceCertificatesValidationResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateValidationTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceCertificatesValidationResultNotFound creates a GetResourceCertificatesValidationResultNotFound with default headers values
func NewGetResourceCertificatesValidationResultNotFound() *GetResourceCertificatesValidationResultNotFound {
	return &GetResourceCertificatesValidationResultNotFound{}
}

/*
GetResourceCertificatesValidationResultNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceCertificatesValidationResultNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource certificates validation result not found response has a 2xx status code
func (o *GetResourceCertificatesValidationResultNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource certificates validation result not found response has a 3xx status code
func (o *GetResourceCertificatesValidationResultNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource certificates validation result not found response has a 4xx status code
func (o *GetResourceCertificatesValidationResultNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource certificates validation result not found response has a 5xx status code
func (o *GetResourceCertificatesValidationResultNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource certificates validation result not found response a status code equal to that given
func (o *GetResourceCertificatesValidationResultNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetResourceCertificatesValidationResultNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationResultNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceCertificatesValidationResultNotFound) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationResultNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceCertificatesValidationResultNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceCertificatesValidationResultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceCertificatesValidationResultInternalServerError creates a GetResourceCertificatesValidationResultInternalServerError with default headers values
func NewGetResourceCertificatesValidationResultInternalServerError() *GetResourceCertificatesValidationResultInternalServerError {
	return &GetResourceCertificatesValidationResultInternalServerError{}
}

/*
GetResourceCertificatesValidationResultInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetResourceCertificatesValidationResultInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource certificates validation result internal server error response has a 2xx status code
func (o *GetResourceCertificatesValidationResultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource certificates validation result internal server error response has a 3xx status code
func (o *GetResourceCertificatesValidationResultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource certificates validation result internal server error response has a 4xx status code
func (o *GetResourceCertificatesValidationResultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource certificates validation result internal server error response has a 5xx status code
func (o *GetResourceCertificatesValidationResultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource certificates validation result internal server error response a status code equal to that given
func (o *GetResourceCertificatesValidationResultInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetResourceCertificatesValidationResultInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceCertificatesValidationResultInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceCertificatesValidationResultInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceCertificatesValidationResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
