// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETVdsesReader is a Reader for the GETVdses structure.
type GETVdsesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETVdsesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETVdsesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETVdsesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGETVdsesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETVdsesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETVdsesOK creates a GETVdsesOK with default headers values
func NewGETVdsesOK() *GETVdsesOK {
	return &GETVdsesOK{}
}

/*
GETVdsesOK describes a response with status code 200, with default header values.

Ok
*/
type GETVdsesOK struct {
	Payload []*models.Vds
}

// IsSuccess returns true when this get vdses o k response has a 2xx status code
func (o *GETVdsesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vdses o k response has a 3xx status code
func (o *GETVdsesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses o k response has a 4xx status code
func (o *GETVdsesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vdses o k response has a 5xx status code
func (o *GETVdsesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vdses o k response a status code equal to that given
func (o *GETVdsesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETVdsesOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesOK  %+v", 200, o.Payload)
}

func (o *GETVdsesOK) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesOK  %+v", 200, o.Payload)
}

func (o *GETVdsesOK) GetPayload() []*models.Vds {
	return o.Payload
}

func (o *GETVdsesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETVdsesBadRequest creates a GETVdsesBadRequest with default headers values
func NewGETVdsesBadRequest() *GETVdsesBadRequest {
	return &GETVdsesBadRequest{}
}

/*
GETVdsesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETVdsesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vdses bad request response has a 2xx status code
func (o *GETVdsesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vdses bad request response has a 3xx status code
func (o *GETVdsesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses bad request response has a 4xx status code
func (o *GETVdsesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vdses bad request response has a 5xx status code
func (o *GETVdsesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vdses bad request response a status code equal to that given
func (o *GETVdsesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETVdsesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesBadRequest  %+v", 400, o.Payload)
}

func (o *GETVdsesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesBadRequest  %+v", 400, o.Payload)
}

func (o *GETVdsesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETVdsesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETVdsesNotFound creates a GETVdsesNotFound with default headers values
func NewGETVdsesNotFound() *GETVdsesNotFound {
	return &GETVdsesNotFound{}
}

/*
GETVdsesNotFound describes a response with status code 404, with default header values.

Cluster Not Found
*/
type GETVdsesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vdses not found response has a 2xx status code
func (o *GETVdsesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vdses not found response has a 3xx status code
func (o *GETVdsesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses not found response has a 4xx status code
func (o *GETVdsesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vdses not found response has a 5xx status code
func (o *GETVdsesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vdses not found response a status code equal to that given
func (o *GETVdsesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETVdsesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesNotFound  %+v", 404, o.Payload)
}

func (o *GETVdsesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesNotFound  %+v", 404, o.Payload)
}

func (o *GETVdsesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETVdsesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETVdsesInternalServerError creates a GETVdsesInternalServerError with default headers values
func NewGETVdsesInternalServerError() *GETVdsesInternalServerError {
	return &GETVdsesInternalServerError{}
}

/*
GETVdsesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETVdsesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vdses internal server error response has a 2xx status code
func (o *GETVdsesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vdses internal server error response has a 3xx status code
func (o *GETVdsesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses internal server error response has a 4xx status code
func (o *GETVdsesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vdses internal server error response has a 5xx status code
func (o *GETVdsesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vdses internal server error response a status code equal to that given
func (o *GETVdsesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETVdsesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETVdsesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETVdsesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETVdsesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
