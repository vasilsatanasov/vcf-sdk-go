// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// ValidateClustersOperationsReader is a Reader for the ValidateClustersOperations structure.
type ValidateClustersOperationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateClustersOperationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateClustersOperationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateClustersOperationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateClustersOperationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateClustersOperationsOK creates a ValidateClustersOperationsOK with default headers values
func NewValidateClustersOperationsOK() *ValidateClustersOperationsOK {
	return &ValidateClustersOperationsOK{}
}

/*
ValidateClustersOperationsOK describes a response with status code 200, with default header values.

Ok
*/
type ValidateClustersOperationsOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate clusters operations o k response has a 2xx status code
func (o *ValidateClustersOperationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate clusters operations o k response has a 3xx status code
func (o *ValidateClustersOperationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate clusters operations o k response has a 4xx status code
func (o *ValidateClustersOperationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate clusters operations o k response has a 5xx status code
func (o *ValidateClustersOperationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate clusters operations o k response a status code equal to that given
func (o *ValidateClustersOperationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ValidateClustersOperationsOK) Error() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClustersOperationsOK  %+v", 200, o.Payload)
}

func (o *ValidateClustersOperationsOK) String() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClustersOperationsOK  %+v", 200, o.Payload)
}

func (o *ValidateClustersOperationsOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateClustersOperationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateClustersOperationsBadRequest creates a ValidateClustersOperationsBadRequest with default headers values
func NewValidateClustersOperationsBadRequest() *ValidateClustersOperationsBadRequest {
	return &ValidateClustersOperationsBadRequest{}
}

/*
ValidateClustersOperationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateClustersOperationsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate clusters operations bad request response has a 2xx status code
func (o *ValidateClustersOperationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate clusters operations bad request response has a 3xx status code
func (o *ValidateClustersOperationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate clusters operations bad request response has a 4xx status code
func (o *ValidateClustersOperationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate clusters operations bad request response has a 5xx status code
func (o *ValidateClustersOperationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate clusters operations bad request response a status code equal to that given
func (o *ValidateClustersOperationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ValidateClustersOperationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClustersOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateClustersOperationsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClustersOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateClustersOperationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateClustersOperationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateClustersOperationsInternalServerError creates a ValidateClustersOperationsInternalServerError with default headers values
func NewValidateClustersOperationsInternalServerError() *ValidateClustersOperationsInternalServerError {
	return &ValidateClustersOperationsInternalServerError{}
}

/*
ValidateClustersOperationsInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type ValidateClustersOperationsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate clusters operations internal server error response has a 2xx status code
func (o *ValidateClustersOperationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate clusters operations internal server error response has a 3xx status code
func (o *ValidateClustersOperationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate clusters operations internal server error response has a 4xx status code
func (o *ValidateClustersOperationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate clusters operations internal server error response has a 5xx status code
func (o *ValidateClustersOperationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate clusters operations internal server error response a status code equal to that given
func (o *ValidateClustersOperationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ValidateClustersOperationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClustersOperationsInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateClustersOperationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClustersOperationsInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateClustersOperationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateClustersOperationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
