// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GETCredentialReader is a Reader for the GETCredential structure.
type GETCredentialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETCredentialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETCredentialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETCredentialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGETCredentialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGETCredentialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGETCredentialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETCredentialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETCredentialOK creates a GETCredentialOK with default headers values
func NewGETCredentialOK() *GETCredentialOK {
	return &GETCredentialOK{}
}

/*
GETCredentialOK describes a response with status code 200, with default header values.

OK
*/
type GETCredentialOK struct {
	Payload *models.Credential
}

// IsSuccess returns true when this get credential o k response has a 2xx status code
func (o *GETCredentialOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get credential o k response has a 3xx status code
func (o *GETCredentialOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential o k response has a 4xx status code
func (o *GETCredentialOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credential o k response has a 5xx status code
func (o *GETCredentialOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential o k response a status code equal to that given
func (o *GETCredentialOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETCredentialOK) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialOK  %+v", 200, o.Payload)
}

func (o *GETCredentialOK) String() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialOK  %+v", 200, o.Payload)
}

func (o *GETCredentialOK) GetPayload() *models.Credential {
	return o.Payload
}

func (o *GETCredentialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Credential)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialBadRequest creates a GETCredentialBadRequest with default headers values
func NewGETCredentialBadRequest() *GETCredentialBadRequest {
	return &GETCredentialBadRequest{}
}

/*
GETCredentialBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETCredentialBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential bad request response has a 2xx status code
func (o *GETCredentialBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential bad request response has a 3xx status code
func (o *GETCredentialBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential bad request response has a 4xx status code
func (o *GETCredentialBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credential bad request response has a 5xx status code
func (o *GETCredentialBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential bad request response a status code equal to that given
func (o *GETCredentialBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETCredentialBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *GETCredentialBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialBadRequest  %+v", 400, o.Payload)
}

func (o *GETCredentialBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialUnauthorized creates a GETCredentialUnauthorized with default headers values
func NewGETCredentialUnauthorized() *GETCredentialUnauthorized {
	return &GETCredentialUnauthorized{}
}

/*
GETCredentialUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GETCredentialUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential unauthorized response has a 2xx status code
func (o *GETCredentialUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential unauthorized response has a 3xx status code
func (o *GETCredentialUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential unauthorized response has a 4xx status code
func (o *GETCredentialUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credential unauthorized response has a 5xx status code
func (o *GETCredentialUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential unauthorized response a status code equal to that given
func (o *GETCredentialUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GETCredentialUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *GETCredentialUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialUnauthorized  %+v", 401, o.Payload)
}

func (o *GETCredentialUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialForbidden creates a GETCredentialForbidden with default headers values
func NewGETCredentialForbidden() *GETCredentialForbidden {
	return &GETCredentialForbidden{}
}

/*
GETCredentialForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GETCredentialForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential forbidden response has a 2xx status code
func (o *GETCredentialForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential forbidden response has a 3xx status code
func (o *GETCredentialForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential forbidden response has a 4xx status code
func (o *GETCredentialForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credential forbidden response has a 5xx status code
func (o *GETCredentialForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential forbidden response a status code equal to that given
func (o *GETCredentialForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GETCredentialForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialForbidden  %+v", 403, o.Payload)
}

func (o *GETCredentialForbidden) String() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialForbidden  %+v", 403, o.Payload)
}

func (o *GETCredentialForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialNotFound creates a GETCredentialNotFound with default headers values
func NewGETCredentialNotFound() *GETCredentialNotFound {
	return &GETCredentialNotFound{}
}

/*
GETCredentialNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GETCredentialNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential not found response has a 2xx status code
func (o *GETCredentialNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential not found response has a 3xx status code
func (o *GETCredentialNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential not found response has a 4xx status code
func (o *GETCredentialNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credential not found response has a 5xx status code
func (o *GETCredentialNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential not found response a status code equal to that given
func (o *GETCredentialNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETCredentialNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialNotFound  %+v", 404, o.Payload)
}

func (o *GETCredentialNotFound) String() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialNotFound  %+v", 404, o.Payload)
}

func (o *GETCredentialNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialInternalServerError creates a GETCredentialInternalServerError with default headers values
func NewGETCredentialInternalServerError() *GETCredentialInternalServerError {
	return &GETCredentialInternalServerError{}
}

/*
GETCredentialInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETCredentialInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential internal server error response has a 2xx status code
func (o *GETCredentialInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential internal server error response has a 3xx status code
func (o *GETCredentialInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential internal server error response has a 4xx status code
func (o *GETCredentialInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credential internal server error response has a 5xx status code
func (o *GETCredentialInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get credential internal server error response a status code equal to that given
func (o *GETCredentialInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETCredentialInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCredentialInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/credentials/{id}][%d] getCredentialInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCredentialInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
