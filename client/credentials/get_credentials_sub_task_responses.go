// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETCredentialsSubTaskReader is a Reader for the GETCredentialsSubTask structure.
type GETCredentialsSubTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETCredentialsSubTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETCredentialsSubTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETCredentialsSubTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETCredentialsSubTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETCredentialsSubTaskOK creates a GETCredentialsSubTaskOK with default headers values
func NewGETCredentialsSubTaskOK() *GETCredentialsSubTaskOK {
	return &GETCredentialsSubTaskOK{}
}

/*
GETCredentialsSubTaskOK describes a response with status code 200, with default header values.

OK
*/
type GETCredentialsSubTaskOK struct {
	Payload *models.CredentialsTask
}

// IsSuccess returns true when this get credentials sub task o k response has a 2xx status code
func (o *GETCredentialsSubTaskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get credentials sub task o k response has a 3xx status code
func (o *GETCredentialsSubTaskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials sub task o k response has a 4xx status code
func (o *GETCredentialsSubTaskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credentials sub task o k response has a 5xx status code
func (o *GETCredentialsSubTaskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get credentials sub task o k response a status code equal to that given
func (o *GETCredentialsSubTaskOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETCredentialsSubTaskOK) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/subtasks/{subtaskId}][%d] getCredentialsSubTaskOK  %+v", 200, o.Payload)
}

func (o *GETCredentialsSubTaskOK) String() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/subtasks/{subtaskId}][%d] getCredentialsSubTaskOK  %+v", 200, o.Payload)
}

func (o *GETCredentialsSubTaskOK) GetPayload() *models.CredentialsTask {
	return o.Payload
}

func (o *GETCredentialsSubTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CredentialsTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialsSubTaskBadRequest creates a GETCredentialsSubTaskBadRequest with default headers values
func NewGETCredentialsSubTaskBadRequest() *GETCredentialsSubTaskBadRequest {
	return &GETCredentialsSubTaskBadRequest{}
}

/*
GETCredentialsSubTaskBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETCredentialsSubTaskBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credentials sub task bad request response has a 2xx status code
func (o *GETCredentialsSubTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credentials sub task bad request response has a 3xx status code
func (o *GETCredentialsSubTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials sub task bad request response has a 4xx status code
func (o *GETCredentialsSubTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credentials sub task bad request response has a 5xx status code
func (o *GETCredentialsSubTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get credentials sub task bad request response a status code equal to that given
func (o *GETCredentialsSubTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETCredentialsSubTaskBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/subtasks/{subtaskId}][%d] getCredentialsSubTaskBadRequest  %+v", 400, o.Payload)
}

func (o *GETCredentialsSubTaskBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/subtasks/{subtaskId}][%d] getCredentialsSubTaskBadRequest  %+v", 400, o.Payload)
}

func (o *GETCredentialsSubTaskBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialsSubTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETCredentialsSubTaskInternalServerError creates a GETCredentialsSubTaskInternalServerError with default headers values
func NewGETCredentialsSubTaskInternalServerError() *GETCredentialsSubTaskInternalServerError {
	return &GETCredentialsSubTaskInternalServerError{}
}

/*
GETCredentialsSubTaskInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETCredentialsSubTaskInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credentials sub task internal server error response has a 2xx status code
func (o *GETCredentialsSubTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credentials sub task internal server error response has a 3xx status code
func (o *GETCredentialsSubTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials sub task internal server error response has a 4xx status code
func (o *GETCredentialsSubTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credentials sub task internal server error response has a 5xx status code
func (o *GETCredentialsSubTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get credentials sub task internal server error response a status code equal to that given
func (o *GETCredentialsSubTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETCredentialsSubTaskInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/subtasks/{subtaskId}][%d] getCredentialsSubTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCredentialsSubTaskInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/subtasks/{subtaskId}][%d] getCredentialsSubTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GETCredentialsSubTaskInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETCredentialsSubTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
