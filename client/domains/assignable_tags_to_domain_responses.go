// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// AssignableTagsToDomainReader is a Reader for the AssignableTagsToDomain structure.
type AssignableTagsToDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssignableTagsToDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssignableTagsToDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAssignableTagsToDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAssignableTagsToDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAssignableTagsToDomainOK creates a AssignableTagsToDomainOK with default headers values
func NewAssignableTagsToDomainOK() *AssignableTagsToDomainOK {
	return &AssignableTagsToDomainOK{}
}

/*
AssignableTagsToDomainOK describes a response with status code 200, with default header values.

Ok
*/
type AssignableTagsToDomainOK struct {
	Payload *models.PageOfTag
}

// IsSuccess returns true when this assignable tags to domain o k response has a 2xx status code
func (o *AssignableTagsToDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this assignable tags to domain o k response has a 3xx status code
func (o *AssignableTagsToDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this assignable tags to domain o k response has a 4xx status code
func (o *AssignableTagsToDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this assignable tags to domain o k response has a 5xx status code
func (o *AssignableTagsToDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this assignable tags to domain o k response a status code equal to that given
func (o *AssignableTagsToDomainOK) IsCode(code int) bool {
	return code == 200
}

func (o *AssignableTagsToDomainOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/assignable-tags][%d] assignableTagsToDomainOK  %+v", 200, o.Payload)
}

func (o *AssignableTagsToDomainOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/assignable-tags][%d] assignableTagsToDomainOK  %+v", 200, o.Payload)
}

func (o *AssignableTagsToDomainOK) GetPayload() *models.PageOfTag {
	return o.Payload
}

func (o *AssignableTagsToDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignableTagsToDomainBadRequest creates a AssignableTagsToDomainBadRequest with default headers values
func NewAssignableTagsToDomainBadRequest() *AssignableTagsToDomainBadRequest {
	return &AssignableTagsToDomainBadRequest{}
}

/*
AssignableTagsToDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AssignableTagsToDomainBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this assignable tags to domain bad request response has a 2xx status code
func (o *AssignableTagsToDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this assignable tags to domain bad request response has a 3xx status code
func (o *AssignableTagsToDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this assignable tags to domain bad request response has a 4xx status code
func (o *AssignableTagsToDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this assignable tags to domain bad request response has a 5xx status code
func (o *AssignableTagsToDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this assignable tags to domain bad request response a status code equal to that given
func (o *AssignableTagsToDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AssignableTagsToDomainBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/assignable-tags][%d] assignableTagsToDomainBadRequest  %+v", 400, o.Payload)
}

func (o *AssignableTagsToDomainBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/assignable-tags][%d] assignableTagsToDomainBadRequest  %+v", 400, o.Payload)
}

func (o *AssignableTagsToDomainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AssignableTagsToDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssignableTagsToDomainInternalServerError creates a AssignableTagsToDomainInternalServerError with default headers values
func NewAssignableTagsToDomainInternalServerError() *AssignableTagsToDomainInternalServerError {
	return &AssignableTagsToDomainInternalServerError{}
}

/*
AssignableTagsToDomainInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type AssignableTagsToDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this assignable tags to domain internal server error response has a 2xx status code
func (o *AssignableTagsToDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this assignable tags to domain internal server error response has a 3xx status code
func (o *AssignableTagsToDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this assignable tags to domain internal server error response has a 4xx status code
func (o *AssignableTagsToDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this assignable tags to domain internal server error response has a 5xx status code
func (o *AssignableTagsToDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this assignable tags to domain internal server error response a status code equal to that given
func (o *AssignableTagsToDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AssignableTagsToDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/assignable-tags][%d] assignableTagsToDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *AssignableTagsToDomainInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/assignable-tags][%d] assignableTagsToDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *AssignableTagsToDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AssignableTagsToDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
