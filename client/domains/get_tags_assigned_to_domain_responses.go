// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETTagsAssignedToDomainReader is a Reader for the GETTagsAssignedToDomain structure.
type GETTagsAssignedToDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETTagsAssignedToDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETTagsAssignedToDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETTagsAssignedToDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETTagsAssignedToDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETTagsAssignedToDomainOK creates a GETTagsAssignedToDomainOK with default headers values
func NewGETTagsAssignedToDomainOK() *GETTagsAssignedToDomainOK {
	return &GETTagsAssignedToDomainOK{}
}

/*
GETTagsAssignedToDomainOK describes a response with status code 200, with default header values.

Ok
*/
type GETTagsAssignedToDomainOK struct {
	Payload *models.PageOfTag
}

// IsSuccess returns true when this get tags assigned to domain o k response has a 2xx status code
func (o *GETTagsAssignedToDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags assigned to domain o k response has a 3xx status code
func (o *GETTagsAssignedToDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to domain o k response has a 4xx status code
func (o *GETTagsAssignedToDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to domain o k response has a 5xx status code
func (o *GETTagsAssignedToDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to domain o k response a status code equal to that given
func (o *GETTagsAssignedToDomainOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETTagsAssignedToDomainOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags][%d] getTagsAssignedToDomainOK  %+v", 200, o.Payload)
}

func (o *GETTagsAssignedToDomainOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags][%d] getTagsAssignedToDomainOK  %+v", 200, o.Payload)
}

func (o *GETTagsAssignedToDomainOK) GetPayload() *models.PageOfTag {
	return o.Payload
}

func (o *GETTagsAssignedToDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETTagsAssignedToDomainBadRequest creates a GETTagsAssignedToDomainBadRequest with default headers values
func NewGETTagsAssignedToDomainBadRequest() *GETTagsAssignedToDomainBadRequest {
	return &GETTagsAssignedToDomainBadRequest{}
}

/*
GETTagsAssignedToDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETTagsAssignedToDomainBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to domain bad request response has a 2xx status code
func (o *GETTagsAssignedToDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to domain bad request response has a 3xx status code
func (o *GETTagsAssignedToDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to domain bad request response has a 4xx status code
func (o *GETTagsAssignedToDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags assigned to domain bad request response has a 5xx status code
func (o *GETTagsAssignedToDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to domain bad request response a status code equal to that given
func (o *GETTagsAssignedToDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETTagsAssignedToDomainBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags][%d] getTagsAssignedToDomainBadRequest  %+v", 400, o.Payload)
}

func (o *GETTagsAssignedToDomainBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags][%d] getTagsAssignedToDomainBadRequest  %+v", 400, o.Payload)
}

func (o *GETTagsAssignedToDomainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETTagsAssignedToDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETTagsAssignedToDomainInternalServerError creates a GETTagsAssignedToDomainInternalServerError with default headers values
func NewGETTagsAssignedToDomainInternalServerError() *GETTagsAssignedToDomainInternalServerError {
	return &GETTagsAssignedToDomainInternalServerError{}
}

/*
GETTagsAssignedToDomainInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GETTagsAssignedToDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to domain internal server error response has a 2xx status code
func (o *GETTagsAssignedToDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to domain internal server error response has a 3xx status code
func (o *GETTagsAssignedToDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to domain internal server error response has a 4xx status code
func (o *GETTagsAssignedToDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to domain internal server error response has a 5xx status code
func (o *GETTagsAssignedToDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tags assigned to domain internal server error response a status code equal to that given
func (o *GETTagsAssignedToDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETTagsAssignedToDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags][%d] getTagsAssignedToDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GETTagsAssignedToDomainInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags][%d] getTagsAssignedToDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GETTagsAssignedToDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETTagsAssignedToDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
