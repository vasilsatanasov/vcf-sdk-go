// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// ValidateDomainsOperationsReader is a Reader for the ValidateDomainsOperations structure.
type ValidateDomainsOperationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateDomainsOperationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateDomainsOperationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateDomainsOperationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateDomainsOperationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateDomainsOperationsOK creates a ValidateDomainsOperationsOK with default headers values
func NewValidateDomainsOperationsOK() *ValidateDomainsOperationsOK {
	return &ValidateDomainsOperationsOK{}
}

/*
ValidateDomainsOperationsOK describes a response with status code 200, with default header values.

Ok
*/
type ValidateDomainsOperationsOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate domains operations o k response has a 2xx status code
func (o *ValidateDomainsOperationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate domains operations o k response has a 3xx status code
func (o *ValidateDomainsOperationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate domains operations o k response has a 4xx status code
func (o *ValidateDomainsOperationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate domains operations o k response has a 5xx status code
func (o *ValidateDomainsOperationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate domains operations o k response a status code equal to that given
func (o *ValidateDomainsOperationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ValidateDomainsOperationsOK) Error() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainsOperationsOK  %+v", 200, o.Payload)
}

func (o *ValidateDomainsOperationsOK) String() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainsOperationsOK  %+v", 200, o.Payload)
}

func (o *ValidateDomainsOperationsOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateDomainsOperationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateDomainsOperationsBadRequest creates a ValidateDomainsOperationsBadRequest with default headers values
func NewValidateDomainsOperationsBadRequest() *ValidateDomainsOperationsBadRequest {
	return &ValidateDomainsOperationsBadRequest{}
}

/*
ValidateDomainsOperationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateDomainsOperationsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate domains operations bad request response has a 2xx status code
func (o *ValidateDomainsOperationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate domains operations bad request response has a 3xx status code
func (o *ValidateDomainsOperationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate domains operations bad request response has a 4xx status code
func (o *ValidateDomainsOperationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate domains operations bad request response has a 5xx status code
func (o *ValidateDomainsOperationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate domains operations bad request response a status code equal to that given
func (o *ValidateDomainsOperationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ValidateDomainsOperationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainsOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateDomainsOperationsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainsOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateDomainsOperationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateDomainsOperationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateDomainsOperationsInternalServerError creates a ValidateDomainsOperationsInternalServerError with default headers values
func NewValidateDomainsOperationsInternalServerError() *ValidateDomainsOperationsInternalServerError {
	return &ValidateDomainsOperationsInternalServerError{}
}

/*
ValidateDomainsOperationsInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type ValidateDomainsOperationsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate domains operations internal server error response has a 2xx status code
func (o *ValidateDomainsOperationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate domains operations internal server error response has a 3xx status code
func (o *ValidateDomainsOperationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate domains operations internal server error response has a 4xx status code
func (o *ValidateDomainsOperationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate domains operations internal server error response has a 5xx status code
func (o *ValidateDomainsOperationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate domains operations internal server error response a status code equal to that given
func (o *ValidateDomainsOperationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ValidateDomainsOperationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainsOperationsInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateDomainsOperationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainsOperationsInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateDomainsOperationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateDomainsOperationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
