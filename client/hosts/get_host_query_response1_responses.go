// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETHostQueryResponse1Reader is a Reader for the GETHostQueryResponse1 structure.
type GETHostQueryResponse1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETHostQueryResponse1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETHostQueryResponse1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETHostQueryResponse1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGETHostQueryResponse1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETHostQueryResponse1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETHostQueryResponse1OK creates a GETHostQueryResponse1OK with default headers values
func NewGETHostQueryResponse1OK() *GETHostQueryResponse1OK {
	return &GETHostQueryResponse1OK{}
}

/*
GETHostQueryResponse1OK describes a response with status code 200, with default header values.

Ok
*/
type GETHostQueryResponse1OK struct {
	Payload *models.HostQueryResponse
}

// IsSuccess returns true when this get host query response1 o k response has a 2xx status code
func (o *GETHostQueryResponse1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get host query response1 o k response has a 3xx status code
func (o *GETHostQueryResponse1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host query response1 o k response has a 4xx status code
func (o *GETHostQueryResponse1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get host query response1 o k response has a 5xx status code
func (o *GETHostQueryResponse1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get host query response1 o k response a status code equal to that given
func (o *GETHostQueryResponse1OK) IsCode(code int) bool {
	return code == 200
}

func (o *GETHostQueryResponse1OK) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1OK  %+v", 200, o.Payload)
}

func (o *GETHostQueryResponse1OK) String() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1OK  %+v", 200, o.Payload)
}

func (o *GETHostQueryResponse1OK) GetPayload() *models.HostQueryResponse {
	return o.Payload
}

func (o *GETHostQueryResponse1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETHostQueryResponse1BadRequest creates a GETHostQueryResponse1BadRequest with default headers values
func NewGETHostQueryResponse1BadRequest() *GETHostQueryResponse1BadRequest {
	return &GETHostQueryResponse1BadRequest{}
}

/*
GETHostQueryResponse1BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETHostQueryResponse1BadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get host query response1 bad request response has a 2xx status code
func (o *GETHostQueryResponse1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get host query response1 bad request response has a 3xx status code
func (o *GETHostQueryResponse1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host query response1 bad request response has a 4xx status code
func (o *GETHostQueryResponse1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get host query response1 bad request response has a 5xx status code
func (o *GETHostQueryResponse1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get host query response1 bad request response a status code equal to that given
func (o *GETHostQueryResponse1BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETHostQueryResponse1BadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1BadRequest  %+v", 400, o.Payload)
}

func (o *GETHostQueryResponse1BadRequest) String() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1BadRequest  %+v", 400, o.Payload)
}

func (o *GETHostQueryResponse1BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETHostQueryResponse1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETHostQueryResponse1NotFound creates a GETHostQueryResponse1NotFound with default headers values
func NewGETHostQueryResponse1NotFound() *GETHostQueryResponse1NotFound {
	return &GETHostQueryResponse1NotFound{}
}

/*
GETHostQueryResponse1NotFound describes a response with status code 404, with default header values.

Query Not Found
*/
type GETHostQueryResponse1NotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get host query response1 not found response has a 2xx status code
func (o *GETHostQueryResponse1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get host query response1 not found response has a 3xx status code
func (o *GETHostQueryResponse1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host query response1 not found response has a 4xx status code
func (o *GETHostQueryResponse1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get host query response1 not found response has a 5xx status code
func (o *GETHostQueryResponse1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get host query response1 not found response a status code equal to that given
func (o *GETHostQueryResponse1NotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETHostQueryResponse1NotFound) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1NotFound  %+v", 404, o.Payload)
}

func (o *GETHostQueryResponse1NotFound) String() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1NotFound  %+v", 404, o.Payload)
}

func (o *GETHostQueryResponse1NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETHostQueryResponse1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETHostQueryResponse1InternalServerError creates a GETHostQueryResponse1InternalServerError with default headers values
func NewGETHostQueryResponse1InternalServerError() *GETHostQueryResponse1InternalServerError {
	return &GETHostQueryResponse1InternalServerError{}
}

/*
GETHostQueryResponse1InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETHostQueryResponse1InternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get host query response1 internal server error response has a 2xx status code
func (o *GETHostQueryResponse1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get host query response1 internal server error response has a 3xx status code
func (o *GETHostQueryResponse1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host query response1 internal server error response has a 4xx status code
func (o *GETHostQueryResponse1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get host query response1 internal server error response has a 5xx status code
func (o *GETHostQueryResponse1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get host query response1 internal server error response a status code equal to that given
func (o *GETHostQueryResponse1InternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETHostQueryResponse1InternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1InternalServerError  %+v", 500, o.Payload)
}

func (o *GETHostQueryResponse1InternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/hosts/queries/{id}][%d] getHostQueryResponse1InternalServerError  %+v", 500, o.Payload)
}

func (o *GETHostQueryResponse1InternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETHostQueryResponse1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
