// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETTagsAssignedToHostReader is a Reader for the GETTagsAssignedToHost structure.
type GETTagsAssignedToHostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETTagsAssignedToHostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETTagsAssignedToHostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETTagsAssignedToHostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETTagsAssignedToHostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETTagsAssignedToHostOK creates a GETTagsAssignedToHostOK with default headers values
func NewGETTagsAssignedToHostOK() *GETTagsAssignedToHostOK {
	return &GETTagsAssignedToHostOK{}
}

/*
GETTagsAssignedToHostOK describes a response with status code 200, with default header values.

Ok
*/
type GETTagsAssignedToHostOK struct {
	Payload *models.PageOfTag
}

// IsSuccess returns true when this get tags assigned to host o k response has a 2xx status code
func (o *GETTagsAssignedToHostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags assigned to host o k response has a 3xx status code
func (o *GETTagsAssignedToHostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to host o k response has a 4xx status code
func (o *GETTagsAssignedToHostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to host o k response has a 5xx status code
func (o *GETTagsAssignedToHostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to host o k response a status code equal to that given
func (o *GETTagsAssignedToHostOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETTagsAssignedToHostOK) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostOK  %+v", 200, o.Payload)
}

func (o *GETTagsAssignedToHostOK) String() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostOK  %+v", 200, o.Payload)
}

func (o *GETTagsAssignedToHostOK) GetPayload() *models.PageOfTag {
	return o.Payload
}

func (o *GETTagsAssignedToHostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETTagsAssignedToHostBadRequest creates a GETTagsAssignedToHostBadRequest with default headers values
func NewGETTagsAssignedToHostBadRequest() *GETTagsAssignedToHostBadRequest {
	return &GETTagsAssignedToHostBadRequest{}
}

/*
GETTagsAssignedToHostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETTagsAssignedToHostBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to host bad request response has a 2xx status code
func (o *GETTagsAssignedToHostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to host bad request response has a 3xx status code
func (o *GETTagsAssignedToHostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to host bad request response has a 4xx status code
func (o *GETTagsAssignedToHostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags assigned to host bad request response has a 5xx status code
func (o *GETTagsAssignedToHostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to host bad request response a status code equal to that given
func (o *GETTagsAssignedToHostBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETTagsAssignedToHostBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostBadRequest  %+v", 400, o.Payload)
}

func (o *GETTagsAssignedToHostBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostBadRequest  %+v", 400, o.Payload)
}

func (o *GETTagsAssignedToHostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETTagsAssignedToHostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETTagsAssignedToHostInternalServerError creates a GETTagsAssignedToHostInternalServerError with default headers values
func NewGETTagsAssignedToHostInternalServerError() *GETTagsAssignedToHostInternalServerError {
	return &GETTagsAssignedToHostInternalServerError{}
}

/*
GETTagsAssignedToHostInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GETTagsAssignedToHostInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to host internal server error response has a 2xx status code
func (o *GETTagsAssignedToHostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to host internal server error response has a 3xx status code
func (o *GETTagsAssignedToHostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to host internal server error response has a 4xx status code
func (o *GETTagsAssignedToHostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to host internal server error response has a 5xx status code
func (o *GETTagsAssignedToHostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tags assigned to host internal server error response a status code equal to that given
func (o *GETTagsAssignedToHostInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETTagsAssignedToHostInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostInternalServerError  %+v", 500, o.Payload)
}

func (o *GETTagsAssignedToHostInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostInternalServerError  %+v", 500, o.Payload)
}

func (o *GETTagsAssignedToHostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETTagsAssignedToHostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
