// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// POSTQueryReader is a Reader for the POSTQuery structure.
type POSTQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *POSTQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPOSTQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPOSTQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPOSTQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPOSTQueryOK creates a POSTQueryOK with default headers values
func NewPOSTQueryOK() *POSTQueryOK {
	return &POSTQueryOK{}
}

/*
POSTQueryOK describes a response with status code 200, with default header values.

Ok
*/
type POSTQueryOK struct {
	Payload *models.HostQueryResponse
}

// IsSuccess returns true when this post query o k response has a 2xx status code
func (o *POSTQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post query o k response has a 3xx status code
func (o *POSTQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post query o k response has a 4xx status code
func (o *POSTQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post query o k response has a 5xx status code
func (o *POSTQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post query o k response a status code equal to that given
func (o *POSTQueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *POSTQueryOK) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/queries][%d] postQueryOK  %+v", 200, o.Payload)
}

func (o *POSTQueryOK) String() string {
	return fmt.Sprintf("[POST /v1/hosts/queries][%d] postQueryOK  %+v", 200, o.Payload)
}

func (o *POSTQueryOK) GetPayload() *models.HostQueryResponse {
	return o.Payload
}

func (o *POSTQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPOSTQueryBadRequest creates a POSTQueryBadRequest with default headers values
func NewPOSTQueryBadRequest() *POSTQueryBadRequest {
	return &POSTQueryBadRequest{}
}

/*
POSTQueryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type POSTQueryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post query bad request response has a 2xx status code
func (o *POSTQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post query bad request response has a 3xx status code
func (o *POSTQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post query bad request response has a 4xx status code
func (o *POSTQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post query bad request response has a 5xx status code
func (o *POSTQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post query bad request response a status code equal to that given
func (o *POSTQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *POSTQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/queries][%d] postQueryBadRequest  %+v", 400, o.Payload)
}

func (o *POSTQueryBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/hosts/queries][%d] postQueryBadRequest  %+v", 400, o.Payload)
}

func (o *POSTQueryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *POSTQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPOSTQueryInternalServerError creates a POSTQueryInternalServerError with default headers values
func NewPOSTQueryInternalServerError() *POSTQueryInternalServerError {
	return &POSTQueryInternalServerError{}
}

/*
POSTQueryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type POSTQueryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post query internal server error response has a 2xx status code
func (o *POSTQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post query internal server error response has a 3xx status code
func (o *POSTQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post query internal server error response has a 4xx status code
func (o *POSTQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post query internal server error response has a 5xx status code
func (o *POSTQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post query internal server error response a status code equal to that given
func (o *POSTQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *POSTQueryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/queries][%d] postQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *POSTQueryInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/hosts/queries][%d] postQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *POSTQueryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *POSTQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
