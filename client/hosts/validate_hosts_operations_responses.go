// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// ValidateHostsOperationsReader is a Reader for the ValidateHostsOperations structure.
type ValidateHostsOperationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateHostsOperationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateHostsOperationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewValidateHostsOperationsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateHostsOperationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateHostsOperationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateHostsOperationsOK creates a ValidateHostsOperationsOK with default headers values
func NewValidateHostsOperationsOK() *ValidateHostsOperationsOK {
	return &ValidateHostsOperationsOK{}
}

/*
ValidateHostsOperationsOK describes a response with status code 200, with default header values.

OK
*/
type ValidateHostsOperationsOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate hosts operations o k response has a 2xx status code
func (o *ValidateHostsOperationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate hosts operations o k response has a 3xx status code
func (o *ValidateHostsOperationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate hosts operations o k response has a 4xx status code
func (o *ValidateHostsOperationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate hosts operations o k response has a 5xx status code
func (o *ValidateHostsOperationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate hosts operations o k response a status code equal to that given
func (o *ValidateHostsOperationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ValidateHostsOperationsOK) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsOK  %+v", 200, o.Payload)
}

func (o *ValidateHostsOperationsOK) String() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsOK  %+v", 200, o.Payload)
}

func (o *ValidateHostsOperationsOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateHostsOperationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateHostsOperationsAccepted creates a ValidateHostsOperationsAccepted with default headers values
func NewValidateHostsOperationsAccepted() *ValidateHostsOperationsAccepted {
	return &ValidateHostsOperationsAccepted{}
}

/*
ValidateHostsOperationsAccepted describes a response with status code 202, with default header values.

Accepted
*/
type ValidateHostsOperationsAccepted struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate hosts operations accepted response has a 2xx status code
func (o *ValidateHostsOperationsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate hosts operations accepted response has a 3xx status code
func (o *ValidateHostsOperationsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate hosts operations accepted response has a 4xx status code
func (o *ValidateHostsOperationsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate hosts operations accepted response has a 5xx status code
func (o *ValidateHostsOperationsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this validate hosts operations accepted response a status code equal to that given
func (o *ValidateHostsOperationsAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ValidateHostsOperationsAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsAccepted  %+v", 202, o.Payload)
}

func (o *ValidateHostsOperationsAccepted) String() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsAccepted  %+v", 202, o.Payload)
}

func (o *ValidateHostsOperationsAccepted) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateHostsOperationsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateHostsOperationsBadRequest creates a ValidateHostsOperationsBadRequest with default headers values
func NewValidateHostsOperationsBadRequest() *ValidateHostsOperationsBadRequest {
	return &ValidateHostsOperationsBadRequest{}
}

/*
ValidateHostsOperationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateHostsOperationsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate hosts operations bad request response has a 2xx status code
func (o *ValidateHostsOperationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate hosts operations bad request response has a 3xx status code
func (o *ValidateHostsOperationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate hosts operations bad request response has a 4xx status code
func (o *ValidateHostsOperationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate hosts operations bad request response has a 5xx status code
func (o *ValidateHostsOperationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate hosts operations bad request response a status code equal to that given
func (o *ValidateHostsOperationsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ValidateHostsOperationsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateHostsOperationsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateHostsOperationsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateHostsOperationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateHostsOperationsInternalServerError creates a ValidateHostsOperationsInternalServerError with default headers values
func NewValidateHostsOperationsInternalServerError() *ValidateHostsOperationsInternalServerError {
	return &ValidateHostsOperationsInternalServerError{}
}

/*
ValidateHostsOperationsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ValidateHostsOperationsInternalServerError struct {
}

// IsSuccess returns true when this validate hosts operations internal server error response has a 2xx status code
func (o *ValidateHostsOperationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate hosts operations internal server error response has a 3xx status code
func (o *ValidateHostsOperationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate hosts operations internal server error response has a 4xx status code
func (o *ValidateHostsOperationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate hosts operations internal server error response has a 5xx status code
func (o *ValidateHostsOperationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate hosts operations internal server error response a status code equal to that given
func (o *ValidateHostsOperationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ValidateHostsOperationsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsInternalServerError ", 500)
}

func (o *ValidateHostsOperationsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/hosts/validations][%d] validateHostsOperationsInternalServerError ", 500)
}

func (o *ValidateHostsOperationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
