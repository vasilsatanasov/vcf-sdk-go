// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package identity_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETAllIdpsReader is a Reader for the GETAllIdps structure.
type GETAllIdpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETAllIdpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETAllIdpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETAllIdpsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGETAllIdpsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETAllIdpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETAllIdpsOK creates a GETAllIdpsOK with default headers values
func NewGETAllIdpsOK() *GETAllIdpsOK {
	return &GETAllIdpsOK{}
}

/*
GETAllIdpsOK describes a response with status code 200, with default header values.

OK
*/
type GETAllIdpsOK struct {
	Payload *models.PageOfIdentityProvider
}

// IsSuccess returns true when this get all idps o k response has a 2xx status code
func (o *GETAllIdpsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all idps o k response has a 3xx status code
func (o *GETAllIdpsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all idps o k response has a 4xx status code
func (o *GETAllIdpsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all idps o k response has a 5xx status code
func (o *GETAllIdpsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all idps o k response a status code equal to that given
func (o *GETAllIdpsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETAllIdpsOK) Error() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsOK  %+v", 200, o.Payload)
}

func (o *GETAllIdpsOK) String() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsOK  %+v", 200, o.Payload)
}

func (o *GETAllIdpsOK) GetPayload() *models.PageOfIdentityProvider {
	return o.Payload
}

func (o *GETAllIdpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfIdentityProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAllIdpsBadRequest creates a GETAllIdpsBadRequest with default headers values
func NewGETAllIdpsBadRequest() *GETAllIdpsBadRequest {
	return &GETAllIdpsBadRequest{}
}

/*
GETAllIdpsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GETAllIdpsBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all idps bad request response has a 2xx status code
func (o *GETAllIdpsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all idps bad request response has a 3xx status code
func (o *GETAllIdpsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all idps bad request response has a 4xx status code
func (o *GETAllIdpsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all idps bad request response has a 5xx status code
func (o *GETAllIdpsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all idps bad request response a status code equal to that given
func (o *GETAllIdpsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETAllIdpsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsBadRequest  %+v", 400, o.Payload)
}

func (o *GETAllIdpsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsBadRequest  %+v", 400, o.Payload)
}

func (o *GETAllIdpsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GETAllIdpsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAllIdpsUnauthorized creates a GETAllIdpsUnauthorized with default headers values
func NewGETAllIdpsUnauthorized() *GETAllIdpsUnauthorized {
	return &GETAllIdpsUnauthorized{}
}

/*
GETAllIdpsUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GETAllIdpsUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all idps unauthorized response has a 2xx status code
func (o *GETAllIdpsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all idps unauthorized response has a 3xx status code
func (o *GETAllIdpsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all idps unauthorized response has a 4xx status code
func (o *GETAllIdpsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all idps unauthorized response has a 5xx status code
func (o *GETAllIdpsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all idps unauthorized response a status code equal to that given
func (o *GETAllIdpsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GETAllIdpsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsUnauthorized  %+v", 401, o.Payload)
}

func (o *GETAllIdpsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsUnauthorized  %+v", 401, o.Payload)
}

func (o *GETAllIdpsUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GETAllIdpsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAllIdpsInternalServerError creates a GETAllIdpsInternalServerError with default headers values
func NewGETAllIdpsInternalServerError() *GETAllIdpsInternalServerError {
	return &GETAllIdpsInternalServerError{}
}

/*
GETAllIdpsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETAllIdpsInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get all idps internal server error response has a 2xx status code
func (o *GETAllIdpsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all idps internal server error response has a 3xx status code
func (o *GETAllIdpsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all idps internal server error response has a 4xx status code
func (o *GETAllIdpsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all idps internal server error response has a 5xx status code
func (o *GETAllIdpsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all idps internal server error response a status code equal to that given
func (o *GETAllIdpsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETAllIdpsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsInternalServerError  %+v", 500, o.Payload)
}

func (o *GETAllIdpsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/identity-providers][%d] getAllIdpsInternalServerError  %+v", 500, o.Payload)
}

func (o *GETAllIdpsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GETAllIdpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
