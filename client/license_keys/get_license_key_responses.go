// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package license_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETLicenseKeyReader is a Reader for the GETLicenseKey structure.
type GETLicenseKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETLicenseKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETLicenseKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETLicenseKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETLicenseKeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETLicenseKeyOK creates a GETLicenseKeyOK with default headers values
func NewGETLicenseKeyOK() *GETLicenseKeyOK {
	return &GETLicenseKeyOK{}
}

/*
GETLicenseKeyOK describes a response with status code 200, with default header values.

Successful
*/
type GETLicenseKeyOK struct {
	Payload *models.LicenseKey
}

// IsSuccess returns true when this get license key o k response has a 2xx status code
func (o *GETLicenseKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get license key o k response has a 3xx status code
func (o *GETLicenseKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license key o k response has a 4xx status code
func (o *GETLicenseKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get license key o k response has a 5xx status code
func (o *GETLicenseKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get license key o k response a status code equal to that given
func (o *GETLicenseKeyOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETLicenseKeyOK) Error() string {
	return fmt.Sprintf("[GET /v1/license-keys/{key}][%d] getLicenseKeyOK  %+v", 200, o.Payload)
}

func (o *GETLicenseKeyOK) String() string {
	return fmt.Sprintf("[GET /v1/license-keys/{key}][%d] getLicenseKeyOK  %+v", 200, o.Payload)
}

func (o *GETLicenseKeyOK) GetPayload() *models.LicenseKey {
	return o.Payload
}

func (o *GETLicenseKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LicenseKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETLicenseKeyNotFound creates a GETLicenseKeyNotFound with default headers values
func NewGETLicenseKeyNotFound() *GETLicenseKeyNotFound {
	return &GETLicenseKeyNotFound{}
}

/*
GETLicenseKeyNotFound describes a response with status code 404, with default header values.

License key not found
*/
type GETLicenseKeyNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get license key not found response has a 2xx status code
func (o *GETLicenseKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get license key not found response has a 3xx status code
func (o *GETLicenseKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license key not found response has a 4xx status code
func (o *GETLicenseKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get license key not found response has a 5xx status code
func (o *GETLicenseKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get license key not found response a status code equal to that given
func (o *GETLicenseKeyNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETLicenseKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/license-keys/{key}][%d] getLicenseKeyNotFound  %+v", 404, o.Payload)
}

func (o *GETLicenseKeyNotFound) String() string {
	return fmt.Sprintf("[GET /v1/license-keys/{key}][%d] getLicenseKeyNotFound  %+v", 404, o.Payload)
}

func (o *GETLicenseKeyNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETLicenseKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETLicenseKeyInternalServerError creates a GETLicenseKeyInternalServerError with default headers values
func NewGETLicenseKeyInternalServerError() *GETLicenseKeyInternalServerError {
	return &GETLicenseKeyInternalServerError{}
}

/*
GETLicenseKeyInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETLicenseKeyInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get license key internal server error response has a 2xx status code
func (o *GETLicenseKeyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get license key internal server error response has a 3xx status code
func (o *GETLicenseKeyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license key internal server error response has a 4xx status code
func (o *GETLicenseKeyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get license key internal server error response has a 5xx status code
func (o *GETLicenseKeyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get license key internal server error response a status code equal to that given
func (o *GETLicenseKeyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETLicenseKeyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/license-keys/{key}][%d] getLicenseKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *GETLicenseKeyInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/license-keys/{key}][%d] getLicenseKeyInternalServerError  %+v", 500, o.Payload)
}

func (o *GETLicenseKeyInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETLicenseKeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
