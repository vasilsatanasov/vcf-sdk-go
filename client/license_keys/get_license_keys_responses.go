// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package license_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GETLicenseKeysReader is a Reader for the GETLicenseKeys structure.
type GETLicenseKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETLicenseKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETLicenseKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGETLicenseKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETLicenseKeysOK creates a GETLicenseKeysOK with default headers values
func NewGETLicenseKeysOK() *GETLicenseKeysOK {
	return &GETLicenseKeysOK{}
}

/*
GETLicenseKeysOK describes a response with status code 200, with default header values.

Successful
*/
type GETLicenseKeysOK struct {
	Payload *models.PageOfLicenseKey
}

// IsSuccess returns true when this get license keys o k response has a 2xx status code
func (o *GETLicenseKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get license keys o k response has a 3xx status code
func (o *GETLicenseKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license keys o k response has a 4xx status code
func (o *GETLicenseKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get license keys o k response has a 5xx status code
func (o *GETLicenseKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get license keys o k response a status code equal to that given
func (o *GETLicenseKeysOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETLicenseKeysOK) Error() string {
	return fmt.Sprintf("[GET /v1/license-keys][%d] getLicenseKeysOK  %+v", 200, o.Payload)
}

func (o *GETLicenseKeysOK) String() string {
	return fmt.Sprintf("[GET /v1/license-keys][%d] getLicenseKeysOK  %+v", 200, o.Payload)
}

func (o *GETLicenseKeysOK) GetPayload() *models.PageOfLicenseKey {
	return o.Payload
}

func (o *GETLicenseKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfLicenseKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETLicenseKeysInternalServerError creates a GETLicenseKeysInternalServerError with default headers values
func NewGETLicenseKeysInternalServerError() *GETLicenseKeysInternalServerError {
	return &GETLicenseKeysInternalServerError{}
}

/*
GETLicenseKeysInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETLicenseKeysInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get license keys internal server error response has a 2xx status code
func (o *GETLicenseKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get license keys internal server error response has a 3xx status code
func (o *GETLicenseKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license keys internal server error response has a 4xx status code
func (o *GETLicenseKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get license keys internal server error response has a 5xx status code
func (o *GETLicenseKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get license keys internal server error response a status code equal to that given
func (o *GETLicenseKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETLicenseKeysInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/license-keys][%d] getLicenseKeysInternalServerError  %+v", 500, o.Payload)
}

func (o *GETLicenseKeysInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/license-keys][%d] getLicenseKeysInternalServerError  %+v", 500, o.Payload)
}

func (o *GETLicenseKeysInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETLicenseKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
