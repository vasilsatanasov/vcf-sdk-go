// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETManifestReader is a Reader for the GETManifest structure.
type GETManifestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETManifestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETManifestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETManifestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETManifestOK creates a GETManifestOK with default headers values
func NewGETManifestOK() *GETManifestOK {
	return &GETManifestOK{}
}

/*
GETManifestOK describes a response with status code 200, with default header values.

Ok
*/
type GETManifestOK struct {
	Payload *models.Manifest
}

// IsSuccess returns true when this get manifest o k response has a 2xx status code
func (o *GETManifestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get manifest o k response has a 3xx status code
func (o *GETManifestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest o k response has a 4xx status code
func (o *GETManifestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get manifest o k response has a 5xx status code
func (o *GETManifestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest o k response a status code equal to that given
func (o *GETManifestOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETManifestOK) Error() string {
	return fmt.Sprintf("[GET /v1/manifests][%d] getManifestOK  %+v", 200, o.Payload)
}

func (o *GETManifestOK) String() string {
	return fmt.Sprintf("[GET /v1/manifests][%d] getManifestOK  %+v", 200, o.Payload)
}

func (o *GETManifestOK) GetPayload() *models.Manifest {
	return o.Payload
}

func (o *GETManifestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Manifest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETManifestNotFound creates a GETManifestNotFound with default headers values
func NewGETManifestNotFound() *GETManifestNotFound {
	return &GETManifestNotFound{}
}

/*
GETManifestNotFound describes a response with status code 404, with default header values.

Manifest Not Found
*/
type GETManifestNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get manifest not found response has a 2xx status code
func (o *GETManifestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest not found response has a 3xx status code
func (o *GETManifestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest not found response has a 4xx status code
func (o *GETManifestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest not found response has a 5xx status code
func (o *GETManifestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest not found response a status code equal to that given
func (o *GETManifestNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETManifestNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/manifests][%d] getManifestNotFound  %+v", 404, o.Payload)
}

func (o *GETManifestNotFound) String() string {
	return fmt.Sprintf("[GET /v1/manifests][%d] getManifestNotFound  %+v", 404, o.Payload)
}

func (o *GETManifestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETManifestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETManifestInternalServerError creates a GETManifestInternalServerError with default headers values
func NewGETManifestInternalServerError() *GETManifestInternalServerError {
	return &GETManifestInternalServerError{}
}

/*
GETManifestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETManifestInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get manifest internal server error response has a 2xx status code
func (o *GETManifestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest internal server error response has a 3xx status code
func (o *GETManifestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest internal server error response has a 4xx status code
func (o *GETManifestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get manifest internal server error response has a 5xx status code
func (o *GETManifestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get manifest internal server error response a status code equal to that given
func (o *GETManifestInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETManifestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/manifests][%d] getManifestInternalServerError  %+v", 500, o.Payload)
}

func (o *GETManifestInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/manifests][%d] getManifestInternalServerError  %+v", 500, o.Payload)
}

func (o *GETManifestInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETManifestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
