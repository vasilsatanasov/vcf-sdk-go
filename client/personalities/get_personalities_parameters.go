// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package personalities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGETPersonalitiesParams creates a new GETPersonalitiesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGETPersonalitiesParams() *GETPersonalitiesParams {
	return &GETPersonalitiesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGETPersonalitiesParamsWithTimeout creates a new GETPersonalitiesParams object
// with the ability to set a timeout on a request.
func NewGETPersonalitiesParamsWithTimeout(timeout time.Duration) *GETPersonalitiesParams {
	return &GETPersonalitiesParams{
		timeout: timeout,
	}
}

// NewGETPersonalitiesParamsWithContext creates a new GETPersonalitiesParams object
// with the ability to set a context for a request.
func NewGETPersonalitiesParamsWithContext(ctx context.Context) *GETPersonalitiesParams {
	return &GETPersonalitiesParams{
		Context: ctx,
	}
}

// NewGETPersonalitiesParamsWithHTTPClient creates a new GETPersonalitiesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGETPersonalitiesParamsWithHTTPClient(client *http.Client) *GETPersonalitiesParams {
	return &GETPersonalitiesParams{
		HTTPClient: client,
	}
}

/*
GETPersonalitiesParams contains all the parameters to send to the API endpoint

	for the get personalities operation.

	Typically these are written to a http.Request.
*/
type GETPersonalitiesParams struct {

	/* AddOnName.

	   The add on name
	*/
	AddOnName *string

	/* AddOnVendorName.

	   The add on vendor name
	*/
	AddOnVendorName *string

	/* BaseOSVersion.

	   The base OS version
	*/
	BaseOSVersion *string

	/* ComponentName.

	   The component name
	*/
	ComponentName *string

	/* ComponentVendorName.

	   The component vendor name
	*/
	ComponentVendorName *string

	/* PersonalityName.

	   personalityName
	*/
	PersonalityName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get personalities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GETPersonalitiesParams) WithDefaults() *GETPersonalitiesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get personalities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GETPersonalitiesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get personalities params
func (o *GETPersonalitiesParams) WithTimeout(timeout time.Duration) *GETPersonalitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get personalities params
func (o *GETPersonalitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get personalities params
func (o *GETPersonalitiesParams) WithContext(ctx context.Context) *GETPersonalitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get personalities params
func (o *GETPersonalitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get personalities params
func (o *GETPersonalitiesParams) WithHTTPClient(client *http.Client) *GETPersonalitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get personalities params
func (o *GETPersonalitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddOnName adds the addOnName to the get personalities params
func (o *GETPersonalitiesParams) WithAddOnName(addOnName *string) *GETPersonalitiesParams {
	o.SetAddOnName(addOnName)
	return o
}

// SetAddOnName adds the addOnName to the get personalities params
func (o *GETPersonalitiesParams) SetAddOnName(addOnName *string) {
	o.AddOnName = addOnName
}

// WithAddOnVendorName adds the addOnVendorName to the get personalities params
func (o *GETPersonalitiesParams) WithAddOnVendorName(addOnVendorName *string) *GETPersonalitiesParams {
	o.SetAddOnVendorName(addOnVendorName)
	return o
}

// SetAddOnVendorName adds the addOnVendorName to the get personalities params
func (o *GETPersonalitiesParams) SetAddOnVendorName(addOnVendorName *string) {
	o.AddOnVendorName = addOnVendorName
}

// WithBaseOSVersion adds the baseOSVersion to the get personalities params
func (o *GETPersonalitiesParams) WithBaseOSVersion(baseOSVersion *string) *GETPersonalitiesParams {
	o.SetBaseOSVersion(baseOSVersion)
	return o
}

// SetBaseOSVersion adds the baseOSVersion to the get personalities params
func (o *GETPersonalitiesParams) SetBaseOSVersion(baseOSVersion *string) {
	o.BaseOSVersion = baseOSVersion
}

// WithComponentName adds the componentName to the get personalities params
func (o *GETPersonalitiesParams) WithComponentName(componentName *string) *GETPersonalitiesParams {
	o.SetComponentName(componentName)
	return o
}

// SetComponentName adds the componentName to the get personalities params
func (o *GETPersonalitiesParams) SetComponentName(componentName *string) {
	o.ComponentName = componentName
}

// WithComponentVendorName adds the componentVendorName to the get personalities params
func (o *GETPersonalitiesParams) WithComponentVendorName(componentVendorName *string) *GETPersonalitiesParams {
	o.SetComponentVendorName(componentVendorName)
	return o
}

// SetComponentVendorName adds the componentVendorName to the get personalities params
func (o *GETPersonalitiesParams) SetComponentVendorName(componentVendorName *string) {
	o.ComponentVendorName = componentVendorName
}

// WithPersonalityName adds the personalityName to the get personalities params
func (o *GETPersonalitiesParams) WithPersonalityName(personalityName *string) *GETPersonalitiesParams {
	o.SetPersonalityName(personalityName)
	return o
}

// SetPersonalityName adds the personalityName to the get personalities params
func (o *GETPersonalitiesParams) SetPersonalityName(personalityName *string) {
	o.PersonalityName = personalityName
}

// WriteToRequest writes these params to a swagger request
func (o *GETPersonalitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AddOnName != nil {

		// query param addOnName
		var qrAddOnName string

		if o.AddOnName != nil {
			qrAddOnName = *o.AddOnName
		}
		qAddOnName := qrAddOnName
		if qAddOnName != "" {

			if err := r.SetQueryParam("addOnName", qAddOnName); err != nil {
				return err
			}
		}
	}

	if o.AddOnVendorName != nil {

		// query param addOnVendorName
		var qrAddOnVendorName string

		if o.AddOnVendorName != nil {
			qrAddOnVendorName = *o.AddOnVendorName
		}
		qAddOnVendorName := qrAddOnVendorName
		if qAddOnVendorName != "" {

			if err := r.SetQueryParam("addOnVendorName", qAddOnVendorName); err != nil {
				return err
			}
		}
	}

	if o.BaseOSVersion != nil {

		// query param baseOSVersion
		var qrBaseOSVersion string

		if o.BaseOSVersion != nil {
			qrBaseOSVersion = *o.BaseOSVersion
		}
		qBaseOSVersion := qrBaseOSVersion
		if qBaseOSVersion != "" {

			if err := r.SetQueryParam("baseOSVersion", qBaseOSVersion); err != nil {
				return err
			}
		}
	}

	if o.ComponentName != nil {

		// query param componentName
		var qrComponentName string

		if o.ComponentName != nil {
			qrComponentName = *o.ComponentName
		}
		qComponentName := qrComponentName
		if qComponentName != "" {

			if err := r.SetQueryParam("componentName", qComponentName); err != nil {
				return err
			}
		}
	}

	if o.ComponentVendorName != nil {

		// query param componentVendorName
		var qrComponentVendorName string

		if o.ComponentVendorName != nil {
			qrComponentVendorName = *o.ComponentVendorName
		}
		qComponentVendorName := qrComponentVendorName
		if qComponentVendorName != "" {

			if err := r.SetQueryParam("componentVendorName", qComponentVendorName); err != nil {
				return err
			}
		}
	}

	if o.PersonalityName != nil {

		// query param personalityName
		var qrPersonalityName string

		if o.PersonalityName != nil {
			qrPersonalityName = *o.PersonalityName
		}
		qPersonalityName := qrPersonalityName
		if qPersonalityName != "" {

			if err := r.SetQueryParam("personalityName", qPersonalityName); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
