// Code generated by go-swagger; DO NOT EDIT.

package personalities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// NewUploadPersonalityParams creates a new UploadPersonalityParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUploadPersonalityParams() *UploadPersonalityParams {
	return &UploadPersonalityParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUploadPersonalityParamsWithTimeout creates a new UploadPersonalityParams object
// with the ability to set a timeout on a request.
func NewUploadPersonalityParamsWithTimeout(timeout time.Duration) *UploadPersonalityParams {
	return &UploadPersonalityParams{
		timeout: timeout,
	}
}

// NewUploadPersonalityParamsWithContext creates a new UploadPersonalityParams object
// with the ability to set a context for a request.
func NewUploadPersonalityParamsWithContext(ctx context.Context) *UploadPersonalityParams {
	return &UploadPersonalityParams{
		Context: ctx,
	}
}

// NewUploadPersonalityParamsWithHTTPClient creates a new UploadPersonalityParams object
// with the ability to set a custom HTTPClient for a request.
func NewUploadPersonalityParamsWithHTTPClient(client *http.Client) *UploadPersonalityParams {
	return &UploadPersonalityParams{
		HTTPClient: client,
	}
}

/*
UploadPersonalityParams contains all the parameters to send to the API endpoint

	for the upload personality operation.

	Typically these are written to a http.Request.
*/
type UploadPersonalityParams struct {

	/* PersonalityUploadSpec.

	   Personality Upload Specification
	*/
	PersonalityUploadSpec *models.PersonalityUploadSpec

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upload personality params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadPersonalityParams) WithDefaults() *UploadPersonalityParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upload personality params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadPersonalityParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upload personality params
func (o *UploadPersonalityParams) WithTimeout(timeout time.Duration) *UploadPersonalityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload personality params
func (o *UploadPersonalityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload personality params
func (o *UploadPersonalityParams) WithContext(ctx context.Context) *UploadPersonalityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload personality params
func (o *UploadPersonalityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload personality params
func (o *UploadPersonalityParams) WithHTTPClient(client *http.Client) *UploadPersonalityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload personality params
func (o *UploadPersonalityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPersonalityUploadSpec adds the personalityUploadSpec to the upload personality params
func (o *UploadPersonalityParams) WithPersonalityUploadSpec(personalityUploadSpec *models.PersonalityUploadSpec) *UploadPersonalityParams {
	o.SetPersonalityUploadSpec(personalityUploadSpec)
	return o
}

// SetPersonalityUploadSpec adds the personalityUploadSpec to the upload personality params
func (o *UploadPersonalityParams) SetPersonalityUploadSpec(personalityUploadSpec *models.PersonalityUploadSpec) {
	o.PersonalityUploadSpec = personalityUploadSpec
}

// WriteToRequest writes these params to a swagger request
func (o *UploadPersonalityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.PersonalityUploadSpec != nil {
		if err := r.SetBodyParam(o.PersonalityUploadSpec); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
