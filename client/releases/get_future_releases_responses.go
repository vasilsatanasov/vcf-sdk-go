// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETFutureReleasesReader is a Reader for the GETFutureReleases structure.
type GETFutureReleasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETFutureReleasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETFutureReleasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETFutureReleasesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETFutureReleasesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETFutureReleasesOK creates a GETFutureReleasesOK with default headers values
func NewGETFutureReleasesOK() *GETFutureReleasesOK {
	return &GETFutureReleasesOK{}
}

/*
GETFutureReleasesOK describes a response with status code 200, with default header values.

Ok
*/
type GETFutureReleasesOK struct {
	Payload *models.PageOfDomainFutureRelease
}

// IsSuccess returns true when this get future releases o k response has a 2xx status code
func (o *GETFutureReleasesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get future releases o k response has a 3xx status code
func (o *GETFutureReleasesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get future releases o k response has a 4xx status code
func (o *GETFutureReleasesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get future releases o k response has a 5xx status code
func (o *GETFutureReleasesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get future releases o k response a status code equal to that given
func (o *GETFutureReleasesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETFutureReleasesOK) Error() string {
	return fmt.Sprintf("[GET /v1/releases/domains/{domainId}/future-releases][%d] getFutureReleasesOK  %+v", 200, o.Payload)
}

func (o *GETFutureReleasesOK) String() string {
	return fmt.Sprintf("[GET /v1/releases/domains/{domainId}/future-releases][%d] getFutureReleasesOK  %+v", 200, o.Payload)
}

func (o *GETFutureReleasesOK) GetPayload() *models.PageOfDomainFutureRelease {
	return o.Payload
}

func (o *GETFutureReleasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfDomainFutureRelease)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETFutureReleasesNotFound creates a GETFutureReleasesNotFound with default headers values
func NewGETFutureReleasesNotFound() *GETFutureReleasesNotFound {
	return &GETFutureReleasesNotFound{}
}

/*
GETFutureReleasesNotFound describes a response with status code 404, with default header values.

Domain not found with given ID.
*/
type GETFutureReleasesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get future releases not found response has a 2xx status code
func (o *GETFutureReleasesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get future releases not found response has a 3xx status code
func (o *GETFutureReleasesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get future releases not found response has a 4xx status code
func (o *GETFutureReleasesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get future releases not found response has a 5xx status code
func (o *GETFutureReleasesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get future releases not found response a status code equal to that given
func (o *GETFutureReleasesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETFutureReleasesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/releases/domains/{domainId}/future-releases][%d] getFutureReleasesNotFound  %+v", 404, o.Payload)
}

func (o *GETFutureReleasesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/releases/domains/{domainId}/future-releases][%d] getFutureReleasesNotFound  %+v", 404, o.Payload)
}

func (o *GETFutureReleasesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETFutureReleasesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETFutureReleasesInternalServerError creates a GETFutureReleasesInternalServerError with default headers values
func NewGETFutureReleasesInternalServerError() *GETFutureReleasesInternalServerError {
	return &GETFutureReleasesInternalServerError{}
}

/*
GETFutureReleasesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETFutureReleasesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get future releases internal server error response has a 2xx status code
func (o *GETFutureReleasesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get future releases internal server error response has a 3xx status code
func (o *GETFutureReleasesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get future releases internal server error response has a 4xx status code
func (o *GETFutureReleasesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get future releases internal server error response has a 5xx status code
func (o *GETFutureReleasesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get future releases internal server error response a status code equal to that given
func (o *GETFutureReleasesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETFutureReleasesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/releases/domains/{domainId}/future-releases][%d] getFutureReleasesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETFutureReleasesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/releases/domains/{domainId}/future-releases][%d] getFutureReleasesInternalServerError  %+v", 500, o.Payload)
}

func (o *GETFutureReleasesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETFutureReleasesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
