// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETSystemReleaseReader is a Reader for the GETSystemRelease structure.
type GETSystemReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETSystemReleaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETSystemReleaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETSystemReleaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETSystemReleaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETSystemReleaseOK creates a GETSystemReleaseOK with default headers values
func NewGETSystemReleaseOK() *GETSystemReleaseOK {
	return &GETSystemReleaseOK{}
}

/*
GETSystemReleaseOK describes a response with status code 200, with default header values.

Ok
*/
type GETSystemReleaseOK struct {
	Payload *models.Release
}

// IsSuccess returns true when this get system release o k response has a 2xx status code
func (o *GETSystemReleaseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get system release o k response has a 3xx status code
func (o *GETSystemReleaseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get system release o k response has a 4xx status code
func (o *GETSystemReleaseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get system release o k response has a 5xx status code
func (o *GETSystemReleaseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get system release o k response a status code equal to that given
func (o *GETSystemReleaseOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETSystemReleaseOK) Error() string {
	return fmt.Sprintf("[GET /v1/releases/system][%d] getSystemReleaseOK  %+v", 200, o.Payload)
}

func (o *GETSystemReleaseOK) String() string {
	return fmt.Sprintf("[GET /v1/releases/system][%d] getSystemReleaseOK  %+v", 200, o.Payload)
}

func (o *GETSystemReleaseOK) GetPayload() *models.Release {
	return o.Payload
}

func (o *GETSystemReleaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Release)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSystemReleaseNotFound creates a GETSystemReleaseNotFound with default headers values
func NewGETSystemReleaseNotFound() *GETSystemReleaseNotFound {
	return &GETSystemReleaseNotFound{}
}

/*
GETSystemReleaseNotFound describes a response with status code 404, with default header values.

Release not found
*/
type GETSystemReleaseNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get system release not found response has a 2xx status code
func (o *GETSystemReleaseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get system release not found response has a 3xx status code
func (o *GETSystemReleaseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get system release not found response has a 4xx status code
func (o *GETSystemReleaseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get system release not found response has a 5xx status code
func (o *GETSystemReleaseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get system release not found response a status code equal to that given
func (o *GETSystemReleaseNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETSystemReleaseNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/releases/system][%d] getSystemReleaseNotFound  %+v", 404, o.Payload)
}

func (o *GETSystemReleaseNotFound) String() string {
	return fmt.Sprintf("[GET /v1/releases/system][%d] getSystemReleaseNotFound  %+v", 404, o.Payload)
}

func (o *GETSystemReleaseNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETSystemReleaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETSystemReleaseInternalServerError creates a GETSystemReleaseInternalServerError with default headers values
func NewGETSystemReleaseInternalServerError() *GETSystemReleaseInternalServerError {
	return &GETSystemReleaseInternalServerError{}
}

/*
GETSystemReleaseInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETSystemReleaseInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get system release internal server error response has a 2xx status code
func (o *GETSystemReleaseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get system release internal server error response has a 3xx status code
func (o *GETSystemReleaseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get system release internal server error response has a 4xx status code
func (o *GETSystemReleaseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get system release internal server error response has a 5xx status code
func (o *GETSystemReleaseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get system release internal server error response a status code equal to that given
func (o *GETSystemReleaseInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETSystemReleaseInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/releases/system][%d] getSystemReleaseInternalServerError  %+v", 500, o.Payload)
}

func (o *GETSystemReleaseInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/releases/system][%d] getSystemReleaseInternalServerError  %+v", 500, o.Payload)
}

func (o *GETSystemReleaseInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETSystemReleaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
