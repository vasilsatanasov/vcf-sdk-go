// Code generated by go-swagger; DO NOT EDIT.

package s_d_d_c

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// CreateSddcReader is a Reader for the CreateSddc structure.
type CreateSddcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSddcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSddcOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateSddcAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSddcBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSddcInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSddcOK creates a CreateSddcOK with default headers values
func NewCreateSddcOK() *CreateSddcOK {
	return &CreateSddcOK{}
}

/*
CreateSddcOK describes a response with status code 200, with default header values.

OK
*/
type CreateSddcOK struct {
	Payload *models.SddcTask
}

// IsSuccess returns true when this create sddc o k response has a 2xx status code
func (o *CreateSddcOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create sddc o k response has a 3xx status code
func (o *CreateSddcOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sddc o k response has a 4xx status code
func (o *CreateSddcOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create sddc o k response has a 5xx status code
func (o *CreateSddcOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create sddc o k response a status code equal to that given
func (o *CreateSddcOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateSddcOK) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcOK  %+v", 200, o.Payload)
}

func (o *CreateSddcOK) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcOK  %+v", 200, o.Payload)
}

func (o *CreateSddcOK) GetPayload() *models.SddcTask {
	return o.Payload
}

func (o *CreateSddcOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SddcTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSddcAccepted creates a CreateSddcAccepted with default headers values
func NewCreateSddcAccepted() *CreateSddcAccepted {
	return &CreateSddcAccepted{}
}

/*
CreateSddcAccepted describes a response with status code 202, with default header values.

Success
*/
type CreateSddcAccepted struct {
	Payload *models.SddcTask
}

// IsSuccess returns true when this create sddc accepted response has a 2xx status code
func (o *CreateSddcAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create sddc accepted response has a 3xx status code
func (o *CreateSddcAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sddc accepted response has a 4xx status code
func (o *CreateSddcAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create sddc accepted response has a 5xx status code
func (o *CreateSddcAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create sddc accepted response a status code equal to that given
func (o *CreateSddcAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *CreateSddcAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcAccepted  %+v", 202, o.Payload)
}

func (o *CreateSddcAccepted) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcAccepted  %+v", 202, o.Payload)
}

func (o *CreateSddcAccepted) GetPayload() *models.SddcTask {
	return o.Payload
}

func (o *CreateSddcAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SddcTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSddcBadRequest creates a CreateSddcBadRequest with default headers values
func NewCreateSddcBadRequest() *CreateSddcBadRequest {
	return &CreateSddcBadRequest{}
}

/*
CreateSddcBadRequest describes a response with status code 400, with default header values.

SDDC already exists, Bad Request
*/
type CreateSddcBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create sddc bad request response has a 2xx status code
func (o *CreateSddcBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create sddc bad request response has a 3xx status code
func (o *CreateSddcBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sddc bad request response has a 4xx status code
func (o *CreateSddcBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create sddc bad request response has a 5xx status code
func (o *CreateSddcBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create sddc bad request response a status code equal to that given
func (o *CreateSddcBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateSddcBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSddcBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSddcBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSddcBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSddcInternalServerError creates a CreateSddcInternalServerError with default headers values
func NewCreateSddcInternalServerError() *CreateSddcInternalServerError {
	return &CreateSddcInternalServerError{}
}

/*
CreateSddcInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateSddcInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create sddc internal server error response has a 2xx status code
func (o *CreateSddcInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create sddc internal server error response has a 3xx status code
func (o *CreateSddcInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sddc internal server error response has a 4xx status code
func (o *CreateSddcInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create sddc internal server error response has a 5xx status code
func (o *CreateSddcInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create sddc internal server error response a status code equal to that given
func (o *CreateSddcInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateSddcInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSddcInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSddcInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSddcInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
