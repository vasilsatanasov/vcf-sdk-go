// Code generated by go-swagger; DO NOT EDIT.

package s_d_d_c

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// ValidateSddcSpecReader is a Reader for the ValidateSddcSpec structure.
type ValidateSddcSpecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateSddcSpecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateSddcSpecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewValidateSddcSpecAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewValidateSddcSpecForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateSddcSpecNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateSddcSpecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateSddcSpecOK creates a ValidateSddcSpecOK with default headers values
func NewValidateSddcSpecOK() *ValidateSddcSpecOK {
	return &ValidateSddcSpecOK{}
}

/*
ValidateSddcSpecOK describes a response with status code 200, with default header values.

Accepted
*/
type ValidateSddcSpecOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate sddc spec o k response has a 2xx status code
func (o *ValidateSddcSpecOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate sddc spec o k response has a 3xx status code
func (o *ValidateSddcSpecOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sddc spec o k response has a 4xx status code
func (o *ValidateSddcSpecOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate sddc spec o k response has a 5xx status code
func (o *ValidateSddcSpecOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sddc spec o k response a status code equal to that given
func (o *ValidateSddcSpecOK) IsCode(code int) bool {
	return code == 200
}

func (o *ValidateSddcSpecOK) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateSddcSpecOK) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateSddcSpecOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateSddcSpecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateSddcSpecAccepted creates a ValidateSddcSpecAccepted with default headers values
func NewValidateSddcSpecAccepted() *ValidateSddcSpecAccepted {
	return &ValidateSddcSpecAccepted{}
}

/*
ValidateSddcSpecAccepted describes a response with status code 202, with default header values.

Success
*/
type ValidateSddcSpecAccepted struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate sddc spec accepted response has a 2xx status code
func (o *ValidateSddcSpecAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate sddc spec accepted response has a 3xx status code
func (o *ValidateSddcSpecAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sddc spec accepted response has a 4xx status code
func (o *ValidateSddcSpecAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate sddc spec accepted response has a 5xx status code
func (o *ValidateSddcSpecAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sddc spec accepted response a status code equal to that given
func (o *ValidateSddcSpecAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ValidateSddcSpecAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecAccepted  %+v", 202, o.Payload)
}

func (o *ValidateSddcSpecAccepted) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecAccepted  %+v", 202, o.Payload)
}

func (o *ValidateSddcSpecAccepted) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateSddcSpecAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateSddcSpecForbidden creates a ValidateSddcSpecForbidden with default headers values
func NewValidateSddcSpecForbidden() *ValidateSddcSpecForbidden {
	return &ValidateSddcSpecForbidden{}
}

/*
ValidateSddcSpecForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateSddcSpecForbidden struct {
}

// IsSuccess returns true when this validate sddc spec forbidden response has a 2xx status code
func (o *ValidateSddcSpecForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate sddc spec forbidden response has a 3xx status code
func (o *ValidateSddcSpecForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sddc spec forbidden response has a 4xx status code
func (o *ValidateSddcSpecForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate sddc spec forbidden response has a 5xx status code
func (o *ValidateSddcSpecForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sddc spec forbidden response a status code equal to that given
func (o *ValidateSddcSpecForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ValidateSddcSpecForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecForbidden ", 403)
}

func (o *ValidateSddcSpecForbidden) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecForbidden ", 403)
}

func (o *ValidateSddcSpecForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSddcSpecNotFound creates a ValidateSddcSpecNotFound with default headers values
func NewValidateSddcSpecNotFound() *ValidateSddcSpecNotFound {
	return &ValidateSddcSpecNotFound{}
}

/*
ValidateSddcSpecNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateSddcSpecNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate sddc spec not found response has a 2xx status code
func (o *ValidateSddcSpecNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate sddc spec not found response has a 3xx status code
func (o *ValidateSddcSpecNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sddc spec not found response has a 4xx status code
func (o *ValidateSddcSpecNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate sddc spec not found response has a 5xx status code
func (o *ValidateSddcSpecNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sddc spec not found response a status code equal to that given
func (o *ValidateSddcSpecNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ValidateSddcSpecNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecNotFound  %+v", 404, o.Payload)
}

func (o *ValidateSddcSpecNotFound) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecNotFound  %+v", 404, o.Payload)
}

func (o *ValidateSddcSpecNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateSddcSpecNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateSddcSpecInternalServerError creates a ValidateSddcSpecInternalServerError with default headers values
func NewValidateSddcSpecInternalServerError() *ValidateSddcSpecInternalServerError {
	return &ValidateSddcSpecInternalServerError{}
}

/*
ValidateSddcSpecInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateSddcSpecInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate sddc spec internal server error response has a 2xx status code
func (o *ValidateSddcSpecInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate sddc spec internal server error response has a 3xx status code
func (o *ValidateSddcSpecInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sddc spec internal server error response has a 4xx status code
func (o *ValidateSddcSpecInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate sddc spec internal server error response has a 5xx status code
func (o *ValidateSddcSpecInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate sddc spec internal server error response a status code equal to that given
func (o *ValidateSddcSpecInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ValidateSddcSpecInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateSddcSpecInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateSddcSpecInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateSddcSpecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
