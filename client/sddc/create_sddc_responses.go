// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sddc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// CreateSDDCReader is a Reader for the CreateSDDC structure.
type CreateSDDCReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSDDCReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSDDCOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateSDDCAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSDDCBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSDDCInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateSDDCOK creates a CreateSDDCOK with default headers values
func NewCreateSDDCOK() *CreateSDDCOK {
	return &CreateSDDCOK{}
}

/*
CreateSDDCOK describes a response with status code 200, with default header values.

OK
*/
type CreateSDDCOK struct {
	Payload *models.SDDCTask
}

// IsSuccess returns true when this create Sddc o k response has a 2xx status code
func (o *CreateSDDCOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Sddc o k response has a 3xx status code
func (o *CreateSDDCOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Sddc o k response has a 4xx status code
func (o *CreateSDDCOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Sddc o k response has a 5xx status code
func (o *CreateSDDCOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create Sddc o k response a status code equal to that given
func (o *CreateSDDCOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateSDDCOK) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcOK  %+v", 200, o.Payload)
}

func (o *CreateSDDCOK) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcOK  %+v", 200, o.Payload)
}

func (o *CreateSDDCOK) GetPayload() *models.SDDCTask {
	return o.Payload
}

func (o *CreateSDDCOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SDDCTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSDDCAccepted creates a CreateSDDCAccepted with default headers values
func NewCreateSDDCAccepted() *CreateSDDCAccepted {
	return &CreateSDDCAccepted{}
}

/*
CreateSDDCAccepted describes a response with status code 202, with default header values.

Success
*/
type CreateSDDCAccepted struct {
	Payload *models.SDDCTask
}

// IsSuccess returns true when this create Sddc accepted response has a 2xx status code
func (o *CreateSDDCAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Sddc accepted response has a 3xx status code
func (o *CreateSDDCAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Sddc accepted response has a 4xx status code
func (o *CreateSDDCAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Sddc accepted response has a 5xx status code
func (o *CreateSDDCAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create Sddc accepted response a status code equal to that given
func (o *CreateSDDCAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *CreateSDDCAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcAccepted  %+v", 202, o.Payload)
}

func (o *CreateSDDCAccepted) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcAccepted  %+v", 202, o.Payload)
}

func (o *CreateSDDCAccepted) GetPayload() *models.SDDCTask {
	return o.Payload
}

func (o *CreateSDDCAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SDDCTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSDDCBadRequest creates a CreateSDDCBadRequest with default headers values
func NewCreateSDDCBadRequest() *CreateSDDCBadRequest {
	return &CreateSDDCBadRequest{}
}

/*
CreateSDDCBadRequest describes a response with status code 400, with default header values.

SDDC already exists, Bad Request
*/
type CreateSDDCBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create Sddc bad request response has a 2xx status code
func (o *CreateSDDCBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Sddc bad request response has a 3xx status code
func (o *CreateSDDCBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Sddc bad request response has a 4xx status code
func (o *CreateSDDCBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Sddc bad request response has a 5xx status code
func (o *CreateSDDCBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create Sddc bad request response a status code equal to that given
func (o *CreateSDDCBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateSDDCBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSDDCBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSDDCBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSDDCBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSDDCInternalServerError creates a CreateSDDCInternalServerError with default headers values
func NewCreateSDDCInternalServerError() *CreateSDDCInternalServerError {
	return &CreateSDDCInternalServerError{}
}

/*
CreateSDDCInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateSDDCInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create Sddc internal server error response has a 2xx status code
func (o *CreateSDDCInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Sddc internal server error response has a 3xx status code
func (o *CreateSDDCInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Sddc internal server error response has a 4xx status code
func (o *CreateSDDCInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Sddc internal server error response has a 5xx status code
func (o *CreateSDDCInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create Sddc internal server error response a status code equal to that given
func (o *CreateSDDCInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreateSDDCInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSDDCInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/sddcs][%d] createSddcInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSDDCInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSDDCInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
