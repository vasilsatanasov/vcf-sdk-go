// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package sddc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GETAllSDDCValidationsReader is a Reader for the GETAllSDDCValidations structure.
type GETAllSDDCValidationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETAllSDDCValidationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETAllSDDCValidationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETAllSDDCValidationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETAllSDDCValidationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGETAllSDDCValidationsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETAllSDDCValidationsOK creates a GETAllSDDCValidationsOK with default headers values
func NewGETAllSDDCValidationsOK() *GETAllSDDCValidationsOK {
	return &GETAllSDDCValidationsOK{}
}

/*
GETAllSDDCValidationsOK describes a response with status code 200, with default header values.

Accepted
*/
type GETAllSDDCValidationsOK struct {
	Payload []*models.Validation
}

// IsSuccess returns true when this get all Sddc validations o k response has a 2xx status code
func (o *GETAllSDDCValidationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all Sddc validations o k response has a 3xx status code
func (o *GETAllSDDCValidationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations o k response has a 4xx status code
func (o *GETAllSDDCValidationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Sddc validations o k response has a 5xx status code
func (o *GETAllSDDCValidationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Sddc validations o k response a status code equal to that given
func (o *GETAllSDDCValidationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETAllSDDCValidationsOK) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsOK  %+v", 200, o.Payload)
}

func (o *GETAllSDDCValidationsOK) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsOK  %+v", 200, o.Payload)
}

func (o *GETAllSDDCValidationsOK) GetPayload() []*models.Validation {
	return o.Payload
}

func (o *GETAllSDDCValidationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAllSDDCValidationsNotFound creates a GETAllSDDCValidationsNotFound with default headers values
func NewGETAllSDDCValidationsNotFound() *GETAllSDDCValidationsNotFound {
	return &GETAllSDDCValidationsNotFound{}
}

/*
GETAllSDDCValidationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GETAllSDDCValidationsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Sddc validations not found response has a 2xx status code
func (o *GETAllSDDCValidationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Sddc validations not found response has a 3xx status code
func (o *GETAllSDDCValidationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations not found response has a 4xx status code
func (o *GETAllSDDCValidationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all Sddc validations not found response has a 5xx status code
func (o *GETAllSDDCValidationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Sddc validations not found response a status code equal to that given
func (o *GETAllSDDCValidationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETAllSDDCValidationsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotFound  %+v", 404, o.Payload)
}

func (o *GETAllSDDCValidationsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotFound  %+v", 404, o.Payload)
}

func (o *GETAllSDDCValidationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETAllSDDCValidationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAllSDDCValidationsInternalServerError creates a GETAllSDDCValidationsInternalServerError with default headers values
func NewGETAllSDDCValidationsInternalServerError() *GETAllSDDCValidationsInternalServerError {
	return &GETAllSDDCValidationsInternalServerError{}
}

/*
GETAllSDDCValidationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETAllSDDCValidationsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Sddc validations internal server error response has a 2xx status code
func (o *GETAllSDDCValidationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Sddc validations internal server error response has a 3xx status code
func (o *GETAllSDDCValidationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations internal server error response has a 4xx status code
func (o *GETAllSDDCValidationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Sddc validations internal server error response has a 5xx status code
func (o *GETAllSDDCValidationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all Sddc validations internal server error response a status code equal to that given
func (o *GETAllSDDCValidationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETAllSDDCValidationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GETAllSDDCValidationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GETAllSDDCValidationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETAllSDDCValidationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETAllSDDCValidationsNotImplemented creates a GETAllSDDCValidationsNotImplemented with default headers values
func NewGETAllSDDCValidationsNotImplemented() *GETAllSDDCValidationsNotImplemented {
	return &GETAllSDDCValidationsNotImplemented{}
}

/*
GETAllSDDCValidationsNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type GETAllSDDCValidationsNotImplemented struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Sddc validations not implemented response has a 2xx status code
func (o *GETAllSDDCValidationsNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Sddc validations not implemented response has a 3xx status code
func (o *GETAllSDDCValidationsNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations not implemented response has a 4xx status code
func (o *GETAllSDDCValidationsNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Sddc validations not implemented response has a 5xx status code
func (o *GETAllSDDCValidationsNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this get all Sddc validations not implemented response a status code equal to that given
func (o *GETAllSDDCValidationsNotImplemented) IsCode(code int) bool {
	return code == 501
}

func (o *GETAllSDDCValidationsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotImplemented  %+v", 501, o.Payload)
}

func (o *GETAllSDDCValidationsNotImplemented) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotImplemented  %+v", 501, o.Payload)
}

func (o *GETAllSDDCValidationsNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETAllSDDCValidationsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
