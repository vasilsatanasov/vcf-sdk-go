// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package sddc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// ValidateSDDCSpecReader is a Reader for the ValidateSDDCSpec structure.
type ValidateSDDCSpecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateSDDCSpecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateSDDCSpecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewValidateSDDCSpecAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewValidateSDDCSpecForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateSDDCSpecNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateSDDCSpecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewValidateSDDCSpecOK creates a ValidateSDDCSpecOK with default headers values
func NewValidateSDDCSpecOK() *ValidateSDDCSpecOK {
	return &ValidateSDDCSpecOK{}
}

/*
ValidateSDDCSpecOK describes a response with status code 200, with default header values.

Accepted
*/
type ValidateSDDCSpecOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate Sddc spec o k response has a 2xx status code
func (o *ValidateSDDCSpecOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate Sddc spec o k response has a 3xx status code
func (o *ValidateSDDCSpecOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Sddc spec o k response has a 4xx status code
func (o *ValidateSDDCSpecOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate Sddc spec o k response has a 5xx status code
func (o *ValidateSDDCSpecOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate Sddc spec o k response a status code equal to that given
func (o *ValidateSDDCSpecOK) IsCode(code int) bool {
	return code == 200
}

func (o *ValidateSDDCSpecOK) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateSDDCSpecOK) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateSDDCSpecOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateSDDCSpecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateSDDCSpecAccepted creates a ValidateSDDCSpecAccepted with default headers values
func NewValidateSDDCSpecAccepted() *ValidateSDDCSpecAccepted {
	return &ValidateSDDCSpecAccepted{}
}

/*
ValidateSDDCSpecAccepted describes a response with status code 202, with default header values.

Success
*/
type ValidateSDDCSpecAccepted struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate Sddc spec accepted response has a 2xx status code
func (o *ValidateSDDCSpecAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate Sddc spec accepted response has a 3xx status code
func (o *ValidateSDDCSpecAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Sddc spec accepted response has a 4xx status code
func (o *ValidateSDDCSpecAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate Sddc spec accepted response has a 5xx status code
func (o *ValidateSDDCSpecAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this validate Sddc spec accepted response a status code equal to that given
func (o *ValidateSDDCSpecAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ValidateSDDCSpecAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecAccepted  %+v", 202, o.Payload)
}

func (o *ValidateSDDCSpecAccepted) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecAccepted  %+v", 202, o.Payload)
}

func (o *ValidateSDDCSpecAccepted) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateSDDCSpecAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateSDDCSpecForbidden creates a ValidateSDDCSpecForbidden with default headers values
func NewValidateSDDCSpecForbidden() *ValidateSDDCSpecForbidden {
	return &ValidateSDDCSpecForbidden{}
}

/*
ValidateSDDCSpecForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateSDDCSpecForbidden struct {
}

// IsSuccess returns true when this validate Sddc spec forbidden response has a 2xx status code
func (o *ValidateSDDCSpecForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate Sddc spec forbidden response has a 3xx status code
func (o *ValidateSDDCSpecForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Sddc spec forbidden response has a 4xx status code
func (o *ValidateSDDCSpecForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate Sddc spec forbidden response has a 5xx status code
func (o *ValidateSDDCSpecForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate Sddc spec forbidden response a status code equal to that given
func (o *ValidateSDDCSpecForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ValidateSDDCSpecForbidden) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecForbidden ", 403)
}

func (o *ValidateSDDCSpecForbidden) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecForbidden ", 403)
}

func (o *ValidateSDDCSpecForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSDDCSpecNotFound creates a ValidateSDDCSpecNotFound with default headers values
func NewValidateSDDCSpecNotFound() *ValidateSDDCSpecNotFound {
	return &ValidateSDDCSpecNotFound{}
}

/*
ValidateSDDCSpecNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateSDDCSpecNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate Sddc spec not found response has a 2xx status code
func (o *ValidateSDDCSpecNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate Sddc spec not found response has a 3xx status code
func (o *ValidateSDDCSpecNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Sddc spec not found response has a 4xx status code
func (o *ValidateSDDCSpecNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate Sddc spec not found response has a 5xx status code
func (o *ValidateSDDCSpecNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate Sddc spec not found response a status code equal to that given
func (o *ValidateSDDCSpecNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ValidateSDDCSpecNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecNotFound  %+v", 404, o.Payload)
}

func (o *ValidateSDDCSpecNotFound) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecNotFound  %+v", 404, o.Payload)
}

func (o *ValidateSDDCSpecNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateSDDCSpecNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateSDDCSpecInternalServerError creates a ValidateSDDCSpecInternalServerError with default headers values
func NewValidateSDDCSpecInternalServerError() *ValidateSDDCSpecInternalServerError {
	return &ValidateSDDCSpecInternalServerError{}
}

/*
ValidateSDDCSpecInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateSDDCSpecInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate Sddc spec internal server error response has a 2xx status code
func (o *ValidateSDDCSpecInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate Sddc spec internal server error response has a 3xx status code
func (o *ValidateSDDCSpecInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Sddc spec internal server error response has a 4xx status code
func (o *ValidateSDDCSpecInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate Sddc spec internal server error response has a 5xx status code
func (o *ValidateSDDCSpecInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate Sddc spec internal server error response a status code equal to that given
func (o *ValidateSDDCSpecInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ValidateSDDCSpecInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateSDDCSpecInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/sddcs/validations][%d] validateSddcSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateSDDCSpecInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateSDDCSpecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
