// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package sos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetsupportBundleTasksReader is a Reader for the GetsupportBundleTasks structure.
type GetsupportBundleTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetsupportBundleTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetsupportBundleTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetsupportBundleTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetsupportBundleTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetsupportBundleTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetsupportBundleTasksOK creates a GetsupportBundleTasksOK with default headers values
func NewGetsupportBundleTasksOK() *GetsupportBundleTasksOK {
	return &GetsupportBundleTasksOK{}
}

/*
GetsupportBundleTasksOK describes a response with status code 200, with default header values.

Ok
*/
type GetsupportBundleTasksOK struct {
	Payload *models.PageOfSupportBundle
}

// IsSuccess returns true when this getsupport bundle tasks o k response has a 2xx status code
func (o *GetsupportBundleTasksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this getsupport bundle tasks o k response has a 3xx status code
func (o *GetsupportBundleTasksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this getsupport bundle tasks o k response has a 4xx status code
func (o *GetsupportBundleTasksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this getsupport bundle tasks o k response has a 5xx status code
func (o *GetsupportBundleTasksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this getsupport bundle tasks o k response a status code equal to that given
func (o *GetsupportBundleTasksOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetsupportBundleTasksOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksOK  %+v", 200, o.Payload)
}

func (o *GetsupportBundleTasksOK) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksOK  %+v", 200, o.Payload)
}

func (o *GetsupportBundleTasksOK) GetPayload() *models.PageOfSupportBundle {
	return o.Payload
}

func (o *GetsupportBundleTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfSupportBundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetsupportBundleTasksBadRequest creates a GetsupportBundleTasksBadRequest with default headers values
func NewGetsupportBundleTasksBadRequest() *GetsupportBundleTasksBadRequest {
	return &GetsupportBundleTasksBadRequest{}
}

/*
GetsupportBundleTasksBadRequest describes a response with status code 400, with default header values.

Bad request! Invalid Headers or Data. Error: {error}
*/
type GetsupportBundleTasksBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this getsupport bundle tasks bad request response has a 2xx status code
func (o *GetsupportBundleTasksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this getsupport bundle tasks bad request response has a 3xx status code
func (o *GetsupportBundleTasksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this getsupport bundle tasks bad request response has a 4xx status code
func (o *GetsupportBundleTasksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this getsupport bundle tasks bad request response has a 5xx status code
func (o *GetsupportBundleTasksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this getsupport bundle tasks bad request response a status code equal to that given
func (o *GetsupportBundleTasksBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetsupportBundleTasksBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksBadRequest  %+v", 400, o.Payload)
}

func (o *GetsupportBundleTasksBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksBadRequest  %+v", 400, o.Payload)
}

func (o *GetsupportBundleTasksBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetsupportBundleTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetsupportBundleTasksUnauthorized creates a GetsupportBundleTasksUnauthorized with default headers values
func NewGetsupportBundleTasksUnauthorized() *GetsupportBundleTasksUnauthorized {
	return &GetsupportBundleTasksUnauthorized{}
}

/*
GetsupportBundleTasksUnauthorized describes a response with status code 401, with default header values.

Bad request! Authorization Header is missing or not in correct format.
*/
type GetsupportBundleTasksUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this getsupport bundle tasks unauthorized response has a 2xx status code
func (o *GetsupportBundleTasksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this getsupport bundle tasks unauthorized response has a 3xx status code
func (o *GetsupportBundleTasksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this getsupport bundle tasks unauthorized response has a 4xx status code
func (o *GetsupportBundleTasksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this getsupport bundle tasks unauthorized response has a 5xx status code
func (o *GetsupportBundleTasksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this getsupport bundle tasks unauthorized response a status code equal to that given
func (o *GetsupportBundleTasksUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetsupportBundleTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetsupportBundleTasksUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *GetsupportBundleTasksUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetsupportBundleTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetsupportBundleTasksInternalServerError creates a GetsupportBundleTasksInternalServerError with default headers values
func NewGetsupportBundleTasksInternalServerError() *GetsupportBundleTasksInternalServerError {
	return &GetsupportBundleTasksInternalServerError{}
}

/*
GetsupportBundleTasksInternalServerError describes a response with status code 500, with default header values.

Something went wrong. Internal server error occurred. Error {error}
*/
type GetsupportBundleTasksInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this getsupport bundle tasks internal server error response has a 2xx status code
func (o *GetsupportBundleTasksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this getsupport bundle tasks internal server error response has a 3xx status code
func (o *GetsupportBundleTasksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this getsupport bundle tasks internal server error response has a 4xx status code
func (o *GetsupportBundleTasksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this getsupport bundle tasks internal server error response has a 5xx status code
func (o *GetsupportBundleTasksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this getsupport bundle tasks internal server error response a status code equal to that given
func (o *GetsupportBundleTasksInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetsupportBundleTasksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetsupportBundleTasksInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getsupportBundleTasksInternalServerError  %+v", 500, o.Payload)
}

func (o *GetsupportBundleTasksInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetsupportBundleTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
