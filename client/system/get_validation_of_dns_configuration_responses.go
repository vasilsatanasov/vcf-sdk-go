// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETValidationOfDNSConfigurationReader is a Reader for the GETValidationOfDNSConfiguration structure.
type GETValidationOfDNSConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETValidationOfDNSConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETValidationOfDNSConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETValidationOfDNSConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETValidationOfDNSConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETValidationOfDNSConfigurationOK creates a GETValidationOfDNSConfigurationOK with default headers values
func NewGETValidationOfDNSConfigurationOK() *GETValidationOfDNSConfigurationOK {
	return &GETValidationOfDNSConfigurationOK{}
}

/*
GETValidationOfDNSConfigurationOK describes a response with status code 200, with default header values.

OK
*/
type GETValidationOfDNSConfigurationOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this get validation of Dns configuration o k response has a 2xx status code
func (o *GETValidationOfDNSConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get validation of Dns configuration o k response has a 3xx status code
func (o *GETValidationOfDNSConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of Dns configuration o k response has a 4xx status code
func (o *GETValidationOfDNSConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validation of Dns configuration o k response has a 5xx status code
func (o *GETValidationOfDNSConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of Dns configuration o k response a status code equal to that given
func (o *GETValidationOfDNSConfigurationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETValidationOfDNSConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations/{id}][%d] getValidationOfDnsConfigurationOK  %+v", 200, o.Payload)
}

func (o *GETValidationOfDNSConfigurationOK) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations/{id}][%d] getValidationOfDnsConfigurationOK  %+v", 200, o.Payload)
}

func (o *GETValidationOfDNSConfigurationOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *GETValidationOfDNSConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationOfDNSConfigurationBadRequest creates a GETValidationOfDNSConfigurationBadRequest with default headers values
func NewGETValidationOfDNSConfigurationBadRequest() *GETValidationOfDNSConfigurationBadRequest {
	return &GETValidationOfDNSConfigurationBadRequest{}
}

/*
GETValidationOfDNSConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETValidationOfDNSConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get validation of Dns configuration bad request response has a 2xx status code
func (o *GETValidationOfDNSConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of Dns configuration bad request response has a 3xx status code
func (o *GETValidationOfDNSConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of Dns configuration bad request response has a 4xx status code
func (o *GETValidationOfDNSConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validation of Dns configuration bad request response has a 5xx status code
func (o *GETValidationOfDNSConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of Dns configuration bad request response a status code equal to that given
func (o *GETValidationOfDNSConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETValidationOfDNSConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations/{id}][%d] getValidationOfDnsConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GETValidationOfDNSConfigurationBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations/{id}][%d] getValidationOfDnsConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GETValidationOfDNSConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETValidationOfDNSConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationOfDNSConfigurationInternalServerError creates a GETValidationOfDNSConfigurationInternalServerError with default headers values
func NewGETValidationOfDNSConfigurationInternalServerError() *GETValidationOfDNSConfigurationInternalServerError {
	return &GETValidationOfDNSConfigurationInternalServerError{}
}

/*
GETValidationOfDNSConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETValidationOfDNSConfigurationInternalServerError struct {
}

// IsSuccess returns true when this get validation of Dns configuration internal server error response has a 2xx status code
func (o *GETValidationOfDNSConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of Dns configuration internal server error response has a 3xx status code
func (o *GETValidationOfDNSConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of Dns configuration internal server error response has a 4xx status code
func (o *GETValidationOfDNSConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validation of Dns configuration internal server error response has a 5xx status code
func (o *GETValidationOfDNSConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get validation of Dns configuration internal server error response a status code equal to that given
func (o *GETValidationOfDNSConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETValidationOfDNSConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations/{id}][%d] getValidationOfDnsConfigurationInternalServerError ", 500)
}

func (o *GETValidationOfDNSConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations/{id}][%d] getValidationOfDnsConfigurationInternalServerError ", 500)
}

func (o *GETValidationOfDNSConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
