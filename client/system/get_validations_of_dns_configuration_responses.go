// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GETValidationsOfDNSConfigurationReader is a Reader for the GETValidationsOfDNSConfiguration structure.
type GETValidationsOfDNSConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETValidationsOfDNSConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETValidationsOfDNSConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETValidationsOfDNSConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETValidationsOfDNSConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETValidationsOfDNSConfigurationOK creates a GETValidationsOfDNSConfigurationOK with default headers values
func NewGETValidationsOfDNSConfigurationOK() *GETValidationsOfDNSConfigurationOK {
	return &GETValidationsOfDNSConfigurationOK{}
}

/*
GETValidationsOfDNSConfigurationOK describes a response with status code 200, with default header values.

OK
*/
type GETValidationsOfDNSConfigurationOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this get validations of Dns configuration o k response has a 2xx status code
func (o *GETValidationsOfDNSConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get validations of Dns configuration o k response has a 3xx status code
func (o *GETValidationsOfDNSConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations of Dns configuration o k response has a 4xx status code
func (o *GETValidationsOfDNSConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validations of Dns configuration o k response has a 5xx status code
func (o *GETValidationsOfDNSConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get validations of Dns configuration o k response a status code equal to that given
func (o *GETValidationsOfDNSConfigurationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETValidationsOfDNSConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations][%d] getValidationsOfDnsConfigurationOK  %+v", 200, o.Payload)
}

func (o *GETValidationsOfDNSConfigurationOK) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations][%d] getValidationsOfDnsConfigurationOK  %+v", 200, o.Payload)
}

func (o *GETValidationsOfDNSConfigurationOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *GETValidationsOfDNSConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationsOfDNSConfigurationBadRequest creates a GETValidationsOfDNSConfigurationBadRequest with default headers values
func NewGETValidationsOfDNSConfigurationBadRequest() *GETValidationsOfDNSConfigurationBadRequest {
	return &GETValidationsOfDNSConfigurationBadRequest{}
}

/*
GETValidationsOfDNSConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETValidationsOfDNSConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get validations of Dns configuration bad request response has a 2xx status code
func (o *GETValidationsOfDNSConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validations of Dns configuration bad request response has a 3xx status code
func (o *GETValidationsOfDNSConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations of Dns configuration bad request response has a 4xx status code
func (o *GETValidationsOfDNSConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validations of Dns configuration bad request response has a 5xx status code
func (o *GETValidationsOfDNSConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get validations of Dns configuration bad request response a status code equal to that given
func (o *GETValidationsOfDNSConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETValidationsOfDNSConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations][%d] getValidationsOfDnsConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GETValidationsOfDNSConfigurationBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations][%d] getValidationsOfDnsConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GETValidationsOfDNSConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETValidationsOfDNSConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationsOfDNSConfigurationInternalServerError creates a GETValidationsOfDNSConfigurationInternalServerError with default headers values
func NewGETValidationsOfDNSConfigurationInternalServerError() *GETValidationsOfDNSConfigurationInternalServerError {
	return &GETValidationsOfDNSConfigurationInternalServerError{}
}

/*
GETValidationsOfDNSConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETValidationsOfDNSConfigurationInternalServerError struct {
}

// IsSuccess returns true when this get validations of Dns configuration internal server error response has a 2xx status code
func (o *GETValidationsOfDNSConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validations of Dns configuration internal server error response has a 3xx status code
func (o *GETValidationsOfDNSConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations of Dns configuration internal server error response has a 4xx status code
func (o *GETValidationsOfDNSConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validations of Dns configuration internal server error response has a 5xx status code
func (o *GETValidationsOfDNSConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get validations of Dns configuration internal server error response a status code equal to that given
func (o *GETValidationsOfDNSConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETValidationsOfDNSConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations][%d] getValidationsOfDnsConfigurationInternalServerError ", 500)
}

func (o *GETValidationsOfDNSConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration/validations][%d] getValidationsOfDnsConfigurationInternalServerError ", 500)
}

func (o *GETValidationsOfDNSConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
