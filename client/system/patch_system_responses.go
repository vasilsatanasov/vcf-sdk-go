// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// PatchSystemReader is a Reader for the PatchSystem structure.
type PatchSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchSystemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchSystemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchSystemOK creates a PatchSystemOK with default headers values
func NewPatchSystemOK() *PatchSystemOK {
	return &PatchSystemOK{}
}

/*
PatchSystemOK describes a response with status code 200, with default header values.

OK
*/
type PatchSystemOK struct {
}

// IsSuccess returns true when this patch system o k response has a 2xx status code
func (o *PatchSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch system o k response has a 3xx status code
func (o *PatchSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system o k response has a 4xx status code
func (o *PatchSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch system o k response has a 5xx status code
func (o *PatchSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system o k response a status code equal to that given
func (o *PatchSystemOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchSystemOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/system][%d] patchSystemOK ", 200)
}

func (o *PatchSystemOK) String() string {
	return fmt.Sprintf("[PATCH /v1/system][%d] patchSystemOK ", 200)
}

func (o *PatchSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchSystemBadRequest creates a PatchSystemBadRequest with default headers values
func NewPatchSystemBadRequest() *PatchSystemBadRequest {
	return &PatchSystemBadRequest{}
}

/*
PatchSystemBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PatchSystemBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this patch system bad request response has a 2xx status code
func (o *PatchSystemBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system bad request response has a 3xx status code
func (o *PatchSystemBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system bad request response has a 4xx status code
func (o *PatchSystemBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system bad request response has a 5xx status code
func (o *PatchSystemBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system bad request response a status code equal to that given
func (o *PatchSystemBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PatchSystemBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/system][%d] patchSystemBadRequest  %+v", 400, o.Payload)
}

func (o *PatchSystemBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/system][%d] patchSystemBadRequest  %+v", 400, o.Payload)
}

func (o *PatchSystemBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchSystemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSystemInternalServerError creates a PatchSystemInternalServerError with default headers values
func NewPatchSystemInternalServerError() *PatchSystemInternalServerError {
	return &PatchSystemInternalServerError{}
}

/*
PatchSystemInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchSystemInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this patch system internal server error response has a 2xx status code
func (o *PatchSystemInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system internal server error response has a 3xx status code
func (o *PatchSystemInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system internal server error response has a 4xx status code
func (o *PatchSystemInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch system internal server error response has a 5xx status code
func (o *PatchSystemInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this patch system internal server error response a status code equal to that given
func (o *PatchSystemInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PatchSystemInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/system][%d] patchSystemInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchSystemInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/system][%d] patchSystemInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchSystemInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchSystemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
