// Code generated by go-swagger; DO NOT EDIT.

package trusted_certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// NewAddTrustedCertificateParams creates a new AddTrustedCertificateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddTrustedCertificateParams() *AddTrustedCertificateParams {
	return &AddTrustedCertificateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddTrustedCertificateParamsWithTimeout creates a new AddTrustedCertificateParams object
// with the ability to set a timeout on a request.
func NewAddTrustedCertificateParamsWithTimeout(timeout time.Duration) *AddTrustedCertificateParams {
	return &AddTrustedCertificateParams{
		timeout: timeout,
	}
}

// NewAddTrustedCertificateParamsWithContext creates a new AddTrustedCertificateParams object
// with the ability to set a context for a request.
func NewAddTrustedCertificateParamsWithContext(ctx context.Context) *AddTrustedCertificateParams {
	return &AddTrustedCertificateParams{
		Context: ctx,
	}
}

// NewAddTrustedCertificateParamsWithHTTPClient creates a new AddTrustedCertificateParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddTrustedCertificateParamsWithHTTPClient(client *http.Client) *AddTrustedCertificateParams {
	return &AddTrustedCertificateParams{
		HTTPClient: client,
	}
}

/*
AddTrustedCertificateParams contains all the parameters to send to the API endpoint

	for the add trusted certificate operation.

	Typically these are written to a http.Request.
*/
type AddTrustedCertificateParams struct {

	/* TrustedCertificateSpec.

	   trustedCertificateSpec
	*/
	TrustedCertificateSpec *models.TrustedCertificateSpec

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add trusted certificate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddTrustedCertificateParams) WithDefaults() *AddTrustedCertificateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add trusted certificate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddTrustedCertificateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add trusted certificate params
func (o *AddTrustedCertificateParams) WithTimeout(timeout time.Duration) *AddTrustedCertificateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add trusted certificate params
func (o *AddTrustedCertificateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add trusted certificate params
func (o *AddTrustedCertificateParams) WithContext(ctx context.Context) *AddTrustedCertificateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add trusted certificate params
func (o *AddTrustedCertificateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add trusted certificate params
func (o *AddTrustedCertificateParams) WithHTTPClient(client *http.Client) *AddTrustedCertificateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add trusted certificate params
func (o *AddTrustedCertificateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTrustedCertificateSpec adds the trustedCertificateSpec to the add trusted certificate params
func (o *AddTrustedCertificateParams) WithTrustedCertificateSpec(trustedCertificateSpec *models.TrustedCertificateSpec) *AddTrustedCertificateParams {
	o.SetTrustedCertificateSpec(trustedCertificateSpec)
	return o
}

// SetTrustedCertificateSpec adds the trustedCertificateSpec to the add trusted certificate params
func (o *AddTrustedCertificateParams) SetTrustedCertificateSpec(trustedCertificateSpec *models.TrustedCertificateSpec) {
	o.TrustedCertificateSpec = trustedCertificateSpec
}

// WriteToRequest writes these params to a swagger request
func (o *AddTrustedCertificateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.TrustedCertificateSpec != nil {
		if err := r.SetBodyParam(o.TrustedCertificateSpec); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
