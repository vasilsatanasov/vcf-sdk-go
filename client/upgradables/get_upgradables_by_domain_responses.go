// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package upgradables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETUpgradablesByDomainReader is a Reader for the GETUpgradablesByDomain structure.
type GETUpgradablesByDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETUpgradablesByDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETUpgradablesByDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETUpgradablesByDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETUpgradablesByDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETUpgradablesByDomainOK creates a GETUpgradablesByDomainOK with default headers values
func NewGETUpgradablesByDomainOK() *GETUpgradablesByDomainOK {
	return &GETUpgradablesByDomainOK{}
}

/*
GETUpgradablesByDomainOK describes a response with status code 200, with default header values.

Ok
*/
type GETUpgradablesByDomainOK struct {
	Payload *models.PageOfUpgradable
}

// IsSuccess returns true when this get upgradables by domain o k response has a 2xx status code
func (o *GETUpgradablesByDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get upgradables by domain o k response has a 3xx status code
func (o *GETUpgradablesByDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgradables by domain o k response has a 4xx status code
func (o *GETUpgradablesByDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgradables by domain o k response has a 5xx status code
func (o *GETUpgradablesByDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgradables by domain o k response a status code equal to that given
func (o *GETUpgradablesByDomainOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETUpgradablesByDomainOK) Error() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainOK  %+v", 200, o.Payload)
}

func (o *GETUpgradablesByDomainOK) String() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainOK  %+v", 200, o.Payload)
}

func (o *GETUpgradablesByDomainOK) GetPayload() *models.PageOfUpgradable {
	return o.Payload
}

func (o *GETUpgradablesByDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfUpgradable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETUpgradablesByDomainNotFound creates a GETUpgradablesByDomainNotFound with default headers values
func NewGETUpgradablesByDomainNotFound() *GETUpgradablesByDomainNotFound {
	return &GETUpgradablesByDomainNotFound{}
}

/*
GETUpgradablesByDomainNotFound describes a response with status code 404, with default header values.

Domain not found
*/
type GETUpgradablesByDomainNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgradables by domain not found response has a 2xx status code
func (o *GETUpgradablesByDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgradables by domain not found response has a 3xx status code
func (o *GETUpgradablesByDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgradables by domain not found response has a 4xx status code
func (o *GETUpgradablesByDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upgradables by domain not found response has a 5xx status code
func (o *GETUpgradablesByDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgradables by domain not found response a status code equal to that given
func (o *GETUpgradablesByDomainNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETUpgradablesByDomainNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainNotFound  %+v", 404, o.Payload)
}

func (o *GETUpgradablesByDomainNotFound) String() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainNotFound  %+v", 404, o.Payload)
}

func (o *GETUpgradablesByDomainNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETUpgradablesByDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETUpgradablesByDomainInternalServerError creates a GETUpgradablesByDomainInternalServerError with default headers values
func NewGETUpgradablesByDomainInternalServerError() *GETUpgradablesByDomainInternalServerError {
	return &GETUpgradablesByDomainInternalServerError{}
}

/*
GETUpgradablesByDomainInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETUpgradablesByDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgradables by domain internal server error response has a 2xx status code
func (o *GETUpgradablesByDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgradables by domain internal server error response has a 3xx status code
func (o *GETUpgradablesByDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgradables by domain internal server error response has a 4xx status code
func (o *GETUpgradablesByDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgradables by domain internal server error response has a 5xx status code
func (o *GETUpgradablesByDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get upgradables by domain internal server error response a status code equal to that given
func (o *GETUpgradablesByDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETUpgradablesByDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GETUpgradablesByDomainInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GETUpgradablesByDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETUpgradablesByDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
