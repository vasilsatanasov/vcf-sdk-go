// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package upgrades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GETUpgradeByIDReader is a Reader for the GETUpgradeByID structure.
type GETUpgradeByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETUpgradeByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETUpgradeByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETUpgradeByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETUpgradeByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETUpgradeByIDOK creates a GETUpgradeByIDOK with default headers values
func NewGETUpgradeByIDOK() *GETUpgradeByIDOK {
	return &GETUpgradeByIDOK{}
}

/*
GETUpgradeByIDOK describes a response with status code 200, with default header values.

OK
*/
type GETUpgradeByIDOK struct {
	Payload *models.Upgrade
}

// IsSuccess returns true when this get upgrade by Id o k response has a 2xx status code
func (o *GETUpgradeByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get upgrade by Id o k response has a 3xx status code
func (o *GETUpgradeByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrade by Id o k response has a 4xx status code
func (o *GETUpgradeByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgrade by Id o k response has a 5xx status code
func (o *GETUpgradeByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgrade by Id o k response a status code equal to that given
func (o *GETUpgradeByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETUpgradeByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdOK  %+v", 200, o.Payload)
}

func (o *GETUpgradeByIDOK) String() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdOK  %+v", 200, o.Payload)
}

func (o *GETUpgradeByIDOK) GetPayload() *models.Upgrade {
	return o.Payload
}

func (o *GETUpgradeByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Upgrade)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETUpgradeByIDNotFound creates a GETUpgradeByIDNotFound with default headers values
func NewGETUpgradeByIDNotFound() *GETUpgradeByIDNotFound {
	return &GETUpgradeByIDNotFound{}
}

/*
GETUpgradeByIDNotFound describes a response with status code 404, with default header values.

Upgrade not found
*/
type GETUpgradeByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgrade by Id not found response has a 2xx status code
func (o *GETUpgradeByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgrade by Id not found response has a 3xx status code
func (o *GETUpgradeByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrade by Id not found response has a 4xx status code
func (o *GETUpgradeByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upgrade by Id not found response has a 5xx status code
func (o *GETUpgradeByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgrade by Id not found response a status code equal to that given
func (o *GETUpgradeByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETUpgradeByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdNotFound  %+v", 404, o.Payload)
}

func (o *GETUpgradeByIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdNotFound  %+v", 404, o.Payload)
}

func (o *GETUpgradeByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETUpgradeByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETUpgradeByIDInternalServerError creates a GETUpgradeByIDInternalServerError with default headers values
func NewGETUpgradeByIDInternalServerError() *GETUpgradeByIDInternalServerError {
	return &GETUpgradeByIDInternalServerError{}
}

/*
GETUpgradeByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GETUpgradeByIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgrade by Id internal server error response has a 2xx status code
func (o *GETUpgradeByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgrade by Id internal server error response has a 3xx status code
func (o *GETUpgradeByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrade by Id internal server error response has a 4xx status code
func (o *GETUpgradeByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgrade by Id internal server error response has a 5xx status code
func (o *GETUpgradeByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get upgrade by Id internal server error response a status code equal to that given
func (o *GETUpgradeByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETUpgradeByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GETUpgradeByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GETUpgradeByIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETUpgradeByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
