// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// NewAddUsersParams creates a new AddUsersParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddUsersParams() *AddUsersParams {
	return &AddUsersParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddUsersParamsWithTimeout creates a new AddUsersParams object
// with the ability to set a timeout on a request.
func NewAddUsersParamsWithTimeout(timeout time.Duration) *AddUsersParams {
	return &AddUsersParams{
		timeout: timeout,
	}
}

// NewAddUsersParamsWithContext creates a new AddUsersParams object
// with the ability to set a context for a request.
func NewAddUsersParamsWithContext(ctx context.Context) *AddUsersParams {
	return &AddUsersParams{
		Context: ctx,
	}
}

// NewAddUsersParamsWithHTTPClient creates a new AddUsersParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddUsersParamsWithHTTPClient(client *http.Client) *AddUsersParams {
	return &AddUsersParams{
		HTTPClient: client,
	}
}

/*
AddUsersParams contains all the parameters to send to the API endpoint

	for the add users operation.

	Typically these are written to a http.Request.
*/
type AddUsersParams struct {

	/* Users.

	   User data collection
	*/
	Users []*models.User

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add users params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddUsersParams) WithDefaults() *AddUsersParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add users params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddUsersParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add users params
func (o *AddUsersParams) WithTimeout(timeout time.Duration) *AddUsersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add users params
func (o *AddUsersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add users params
func (o *AddUsersParams) WithContext(ctx context.Context) *AddUsersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add users params
func (o *AddUsersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add users params
func (o *AddUsersParams) WithHTTPClient(client *http.Client) *AddUsersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add users params
func (o *AddUsersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUsers adds the users to the add users params
func (o *AddUsersParams) WithUsers(users []*models.User) *AddUsersParams {
	o.SetUsers(users)
	return o
}

// SetUsers adds the users to the add users params
func (o *AddUsersParams) SetUsers(users []*models.User) {
	o.Users = users
}

// WriteToRequest writes these params to a swagger request
func (o *AddUsersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Users != nil {
		if err := r.SetBodyParam(o.Users); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
