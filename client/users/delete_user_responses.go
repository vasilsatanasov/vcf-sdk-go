// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// DeleteUserReader is a Reader for the DeleteUser structure.
type DeleteUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserNoContent creates a DeleteUserNoContent with default headers values
func NewDeleteUserNoContent() *DeleteUserNoContent {
	return &DeleteUserNoContent{}
}

/*
DeleteUserNoContent describes a response with status code 204, with default header values.

No content
*/
type DeleteUserNoContent struct {
}

// IsSuccess returns true when this delete user no content response has a 2xx status code
func (o *DeleteUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user no content response has a 3xx status code
func (o *DeleteUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user no content response has a 4xx status code
func (o *DeleteUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user no content response has a 5xx status code
func (o *DeleteUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user no content response a status code equal to that given
func (o *DeleteUserNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteUserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] deleteUserNoContent ", 204)
}

func (o *DeleteUserNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] deleteUserNoContent ", 204)
}

func (o *DeleteUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserNotFound creates a DeleteUserNotFound with default headers values
func NewDeleteUserNotFound() *DeleteUserNotFound {
	return &DeleteUserNotFound{}
}

/*
DeleteUserNotFound describes a response with status code 404, with default header values.

User not found
*/
type DeleteUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete user not found response has a 2xx status code
func (o *DeleteUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user not found response has a 3xx status code
func (o *DeleteUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user not found response has a 4xx status code
func (o *DeleteUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user not found response has a 5xx status code
func (o *DeleteUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user not found response a status code equal to that given
func (o *DeleteUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] deleteUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] deleteUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserInternalServerError creates a DeleteUserInternalServerError with default headers values
func NewDeleteUserInternalServerError() *DeleteUserInternalServerError {
	return &DeleteUserInternalServerError{}
}

/*
DeleteUserInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete user internal server error response has a 2xx status code
func (o *DeleteUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user internal server error response has a 3xx status code
func (o *DeleteUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user internal server error response has a 4xx status code
func (o *DeleteUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user internal server error response has a 5xx status code
func (o *DeleteUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user internal server error response a status code equal to that given
func (o *DeleteUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] deleteUserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] deleteUserInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
