// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package v_centers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GETVcenterReader is a Reader for the GETVcenter structure.
type GETVcenterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETVcenterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETVcenterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGETVcenterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETVcenterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETVcenterOK creates a GETVcenterOK with default headers values
func NewGETVcenterOK() *GETVcenterOK {
	return &GETVcenterOK{}
}

/*
GETVcenterOK describes a response with status code 200, with default header values.

Ok
*/
type GETVcenterOK struct {
	Payload *models.Vcenter
}

// IsSuccess returns true when this get vcenter o k response has a 2xx status code
func (o *GETVcenterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcenter o k response has a 3xx status code
func (o *GETVcenterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcenter o k response has a 4xx status code
func (o *GETVcenterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcenter o k response has a 5xx status code
func (o *GETVcenterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcenter o k response a status code equal to that given
func (o *GETVcenterOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETVcenterOK) Error() string {
	return fmt.Sprintf("[GET /v1/vcenters/{id}][%d] getVcenterOK  %+v", 200, o.Payload)
}

func (o *GETVcenterOK) String() string {
	return fmt.Sprintf("[GET /v1/vcenters/{id}][%d] getVcenterOK  %+v", 200, o.Payload)
}

func (o *GETVcenterOK) GetPayload() *models.Vcenter {
	return o.Payload
}

func (o *GETVcenterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Vcenter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETVcenterNotFound creates a GETVcenterNotFound with default headers values
func NewGETVcenterNotFound() *GETVcenterNotFound {
	return &GETVcenterNotFound{}
}

/*
GETVcenterNotFound describes a response with status code 404, with default header values.

vCenter not found
*/
type GETVcenterNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcenter not found response has a 2xx status code
func (o *GETVcenterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcenter not found response has a 3xx status code
func (o *GETVcenterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcenter not found response has a 4xx status code
func (o *GETVcenterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcenter not found response has a 5xx status code
func (o *GETVcenterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcenter not found response a status code equal to that given
func (o *GETVcenterNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETVcenterNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/vcenters/{id}][%d] getVcenterNotFound  %+v", 404, o.Payload)
}

func (o *GETVcenterNotFound) String() string {
	return fmt.Sprintf("[GET /v1/vcenters/{id}][%d] getVcenterNotFound  %+v", 404, o.Payload)
}

func (o *GETVcenterNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETVcenterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETVcenterInternalServerError creates a GETVcenterInternalServerError with default headers values
func NewGETVcenterInternalServerError() *GETVcenterInternalServerError {
	return &GETVcenterInternalServerError{}
}

/*
GETVcenterInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GETVcenterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcenter internal server error response has a 2xx status code
func (o *GETVcenterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcenter internal server error response has a 3xx status code
func (o *GETVcenterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcenter internal server error response has a 4xx status code
func (o *GETVcenterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcenter internal server error response has a 5xx status code
func (o *GETVcenterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vcenter internal server error response a status code equal to that given
func (o *GETVcenterInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETVcenterInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vcenters/{id}][%d] getVcenterInternalServerError  %+v", 500, o.Payload)
}

func (o *GETVcenterInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vcenters/{id}][%d] getVcenterInternalServerError  %+v", 500, o.Payload)
}

func (o *GETVcenterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETVcenterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
