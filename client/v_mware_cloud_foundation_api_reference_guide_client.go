// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/client/a_v_ns"
	"vcf-sdk-go/client/backup_restore"
	"vcf-sdk-go/client/bundles"
	"vcf-sdk-go/client/ceip"
	"vcf-sdk-go/client/certificates"
	"vcf-sdk-go/client/clusters"
	"vcf-sdk-go/client/credentials"
	"vcf-sdk-go/client/depot_settings"
	"vcf-sdk-go/client/domains"
	"vcf-sdk-go/client/fips_mode_details"
	"vcf-sdk-go/client/hosts"
	"vcf-sdk-go/client/identity_providers"
	"vcf-sdk-go/client/license_keys"
	"vcf-sdk-go/client/manifests"
	"vcf-sdk-go/client/n_s_x_t_clusters"
	"vcf-sdk-go/client/network_pools"
	"vcf-sdk-go/client/nsx_t_edge_clusters"
	"vcf-sdk-go/client/p_s_cs"
	"vcf-sdk-go/client/personalities"
	"vcf-sdk-go/client/proxy_configuration"
	"vcf-sdk-go/client/releases"
	"vcf-sdk-go/client/resource_functionalities"
	"vcf-sdk-go/client/resource_warnings"
	"vcf-sdk-go/client/sddc"
	"vcf-sdk-go/client/sddc_managers"
	"vcf-sdk-go/client/sos"
	"vcf-sdk-go/client/system"
	"vcf-sdk-go/client/system_prechecks"
	"vcf-sdk-go/client/tasks"
	"vcf-sdk-go/client/tokens"
	"vcf-sdk-go/client/trusted_certificates"
	"vcf-sdk-go/client/upgradables"
	"vcf-sdk-go/client/upgrades"
	"vcf-sdk-go/client/users"
	"vcf-sdk-go/client/v_centers"
	"vcf-sdk-go/client/v_r_l_i"
	"vcf-sdk-go/client/v_r_o_ps"
	"vcf-sdk-go/client/v_r_s_l_c_m"
	"vcf-sdk-go/client/vasa_providers"
	"vcf-sdk-go/client/vcf_services"
	"vcf-sdk-go/client/version_aliases_for_bundle_component_type"
	"vcf-sdk-go/client/vra"
	"vcf-sdk-go/client/vsan_health_check"
	"vcf-sdk-go/client/wsa"
)

// Default v mware cloud foundation API reference guide HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "sfo-vcf01.rainpole.io"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new v mware cloud foundation API reference guide HTTP client.
func NewHTTPClient(formats strfmt.Registry) *VMwareCloudFoundationAPIReferenceGuide {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new v mware cloud foundation API reference guide HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *VMwareCloudFoundationAPIReferenceGuide {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new v mware cloud foundation API reference guide client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *VMwareCloudFoundationAPIReferenceGuide {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(VMwareCloudFoundationAPIReferenceGuide)
	cli.Transport = transport
	cli.AvNs = a_v_ns.New(transport, formats)
	cli.BackupRestore = backup_restore.New(transport, formats)
	cli.Bundles = bundles.New(transport, formats)
	cli.CEIP = ceip.New(transport, formats)
	cli.Certificates = certificates.New(transport, formats)
	cli.Clusters = clusters.New(transport, formats)
	cli.Credentials = credentials.New(transport, formats)
	cli.DepotSettings = depot_settings.New(transport, formats)
	cli.Domains = domains.New(transport, formats)
	cli.FIPSModeDetails = fips_mode_details.New(transport, formats)
	cli.Hosts = hosts.New(transport, formats)
	cli.IdentityProviders = identity_providers.New(transport, formats)
	cli.LicenseKeys = license_keys.New(transport, formats)
	cli.Manifests = manifests.New(transport, formats)
	cli.NSXTClusters = n_s_x_t_clusters.New(transport, formats)
	cli.NetworkPools = network_pools.New(transport, formats)
	cli.NSXTEdgeClusters = nsx_t_edge_clusters.New(transport, formats)
	cli.PsCs = p_s_cs.New(transport, formats)
	cli.Personalities = personalities.New(transport, formats)
	cli.ProxyConfiguration = proxy_configuration.New(transport, formats)
	cli.Releases = releases.New(transport, formats)
	cli.ResourceFunctionalities = resource_functionalities.New(transport, formats)
	cli.ResourceWarnings = resource_warnings.New(transport, formats)
	cli.SDDC = sddc.New(transport, formats)
	cli.SDDCManagers = sddc_managers.New(transport, formats)
	cli.SOS = sos.New(transport, formats)
	cli.System = system.New(transport, formats)
	cli.SystemPrechecks = system_prechecks.New(transport, formats)
	cli.Tasks = tasks.New(transport, formats)
	cli.Tokens = tokens.New(transport, formats)
	cli.TrustedCertificates = trusted_certificates.New(transport, formats)
	cli.Upgradables = upgradables.New(transport, formats)
	cli.Upgrades = upgrades.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.VCenters = v_centers.New(transport, formats)
	cli.Vrli = v_r_l_i.New(transport, formats)
	cli.VroPs = v_r_o_ps.New(transport, formats)
	cli.VRSLCM = v_r_s_l_c_m.New(transport, formats)
	cli.VasaProviders = vasa_providers.New(transport, formats)
	cli.VcfServices = vcf_services.New(transport, formats)
	cli.VersionAliasesForBundleComponentType = version_aliases_for_bundle_component_type.New(transport, formats)
	cli.VRA = vra.New(transport, formats)
	cli.VSANHealthCheck = vsan_health_check.New(transport, formats)
	cli.WSA = wsa.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// VMwareCloudFoundationAPIReferenceGuide is a client for v mware cloud foundation API reference guide
type VMwareCloudFoundationAPIReferenceGuide struct {
	AvNs a_v_ns.ClientService

	BackupRestore backup_restore.ClientService

	Bundles bundles.ClientService

	CEIP ceip.ClientService

	Certificates certificates.ClientService

	Clusters clusters.ClientService

	Credentials credentials.ClientService

	DepotSettings depot_settings.ClientService

	Domains domains.ClientService

	FIPSModeDetails fips_mode_details.ClientService

	Hosts hosts.ClientService

	IdentityProviders identity_providers.ClientService

	LicenseKeys license_keys.ClientService

	Manifests manifests.ClientService

	NSXTClusters n_s_x_t_clusters.ClientService

	NetworkPools network_pools.ClientService

	NSXTEdgeClusters nsx_t_edge_clusters.ClientService

	PsCs p_s_cs.ClientService

	Personalities personalities.ClientService

	ProxyConfiguration proxy_configuration.ClientService

	Releases releases.ClientService

	ResourceFunctionalities resource_functionalities.ClientService

	ResourceWarnings resource_warnings.ClientService

	SDDC sddc.ClientService

	SDDCManagers sddc_managers.ClientService

	SOS sos.ClientService

	System system.ClientService

	SystemPrechecks system_prechecks.ClientService

	Tasks tasks.ClientService

	Tokens tokens.ClientService

	TrustedCertificates trusted_certificates.ClientService

	Upgradables upgradables.ClientService

	Upgrades upgrades.ClientService

	Users users.ClientService

	VCenters v_centers.ClientService

	Vrli v_r_l_i.ClientService

	VroPs v_r_o_ps.ClientService

	VRSLCM v_r_s_l_c_m.ClientService

	VasaProviders vasa_providers.ClientService

	VcfServices vcf_services.ClientService

	VersionAliasesForBundleComponentType version_aliases_for_bundle_component_type.ClientService

	VRA vra.ClientService

	VSANHealthCheck vsan_health_check.ClientService

	WSA wsa.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *VMwareCloudFoundationAPIReferenceGuide) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AvNs.SetTransport(transport)
	c.BackupRestore.SetTransport(transport)
	c.Bundles.SetTransport(transport)
	c.CEIP.SetTransport(transport)
	c.Certificates.SetTransport(transport)
	c.Clusters.SetTransport(transport)
	c.Credentials.SetTransport(transport)
	c.DepotSettings.SetTransport(transport)
	c.Domains.SetTransport(transport)
	c.FIPSModeDetails.SetTransport(transport)
	c.Hosts.SetTransport(transport)
	c.IdentityProviders.SetTransport(transport)
	c.LicenseKeys.SetTransport(transport)
	c.Manifests.SetTransport(transport)
	c.NSXTClusters.SetTransport(transport)
	c.NetworkPools.SetTransport(transport)
	c.NSXTEdgeClusters.SetTransport(transport)
	c.PsCs.SetTransport(transport)
	c.Personalities.SetTransport(transport)
	c.ProxyConfiguration.SetTransport(transport)
	c.Releases.SetTransport(transport)
	c.ResourceFunctionalities.SetTransport(transport)
	c.ResourceWarnings.SetTransport(transport)
	c.SDDC.SetTransport(transport)
	c.SDDCManagers.SetTransport(transport)
	c.SOS.SetTransport(transport)
	c.System.SetTransport(transport)
	c.SystemPrechecks.SetTransport(transport)
	c.Tasks.SetTransport(transport)
	c.Tokens.SetTransport(transport)
	c.TrustedCertificates.SetTransport(transport)
	c.Upgradables.SetTransport(transport)
	c.Upgrades.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.VCenters.SetTransport(transport)
	c.Vrli.SetTransport(transport)
	c.VroPs.SetTransport(transport)
	c.VRSLCM.SetTransport(transport)
	c.VasaProviders.SetTransport(transport)
	c.VcfServices.SetTransport(transport)
	c.VersionAliasesForBundleComponentType.SetTransport(transport)
	c.VRA.SetTransport(transport)
	c.VSANHealthCheck.SetTransport(transport)
	c.WSA.SetTransport(transport)
}
