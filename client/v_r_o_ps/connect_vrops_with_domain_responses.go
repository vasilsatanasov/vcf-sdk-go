// Code generated by go-swagger; DO NOT EDIT.

package v_r_o_ps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// ConnectVropsWithDomainReader is a Reader for the ConnectVropsWithDomain structure.
type ConnectVropsWithDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectVropsWithDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectVropsWithDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewConnectVropsWithDomainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConnectVropsWithDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConnectVropsWithDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConnectVropsWithDomainOK creates a ConnectVropsWithDomainOK with default headers values
func NewConnectVropsWithDomainOK() *ConnectVropsWithDomainOK {
	return &ConnectVropsWithDomainOK{}
}

/*
ConnectVropsWithDomainOK describes a response with status code 200, with default header values.

OK
*/
type ConnectVropsWithDomainOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this connect vrops with domain o k response has a 2xx status code
func (o *ConnectVropsWithDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this connect vrops with domain o k response has a 3xx status code
func (o *ConnectVropsWithDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this connect vrops with domain o k response has a 4xx status code
func (o *ConnectVropsWithDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this connect vrops with domain o k response has a 5xx status code
func (o *ConnectVropsWithDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this connect vrops with domain o k response a status code equal to that given
func (o *ConnectVropsWithDomainOK) IsCode(code int) bool {
	return code == 200
}

func (o *ConnectVropsWithDomainOK) Error() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainOK  %+v", 200, o.Payload)
}

func (o *ConnectVropsWithDomainOK) String() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainOK  %+v", 200, o.Payload)
}

func (o *ConnectVropsWithDomainOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *ConnectVropsWithDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectVropsWithDomainAccepted creates a ConnectVropsWithDomainAccepted with default headers values
func NewConnectVropsWithDomainAccepted() *ConnectVropsWithDomainAccepted {
	return &ConnectVropsWithDomainAccepted{}
}

/*
ConnectVropsWithDomainAccepted describes a response with status code 202, with default header values.

Accepted
*/
type ConnectVropsWithDomainAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this connect vrops with domain accepted response has a 2xx status code
func (o *ConnectVropsWithDomainAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this connect vrops with domain accepted response has a 3xx status code
func (o *ConnectVropsWithDomainAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this connect vrops with domain accepted response has a 4xx status code
func (o *ConnectVropsWithDomainAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this connect vrops with domain accepted response has a 5xx status code
func (o *ConnectVropsWithDomainAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this connect vrops with domain accepted response a status code equal to that given
func (o *ConnectVropsWithDomainAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *ConnectVropsWithDomainAccepted) Error() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainAccepted  %+v", 202, o.Payload)
}

func (o *ConnectVropsWithDomainAccepted) String() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainAccepted  %+v", 202, o.Payload)
}

func (o *ConnectVropsWithDomainAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *ConnectVropsWithDomainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectVropsWithDomainBadRequest creates a ConnectVropsWithDomainBadRequest with default headers values
func NewConnectVropsWithDomainBadRequest() *ConnectVropsWithDomainBadRequest {
	return &ConnectVropsWithDomainBadRequest{}
}

/*
ConnectVropsWithDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ConnectVropsWithDomainBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this connect vrops with domain bad request response has a 2xx status code
func (o *ConnectVropsWithDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this connect vrops with domain bad request response has a 3xx status code
func (o *ConnectVropsWithDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this connect vrops with domain bad request response has a 4xx status code
func (o *ConnectVropsWithDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this connect vrops with domain bad request response has a 5xx status code
func (o *ConnectVropsWithDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this connect vrops with domain bad request response a status code equal to that given
func (o *ConnectVropsWithDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ConnectVropsWithDomainBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainBadRequest  %+v", 400, o.Payload)
}

func (o *ConnectVropsWithDomainBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainBadRequest  %+v", 400, o.Payload)
}

func (o *ConnectVropsWithDomainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConnectVropsWithDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectVropsWithDomainInternalServerError creates a ConnectVropsWithDomainInternalServerError with default headers values
func NewConnectVropsWithDomainInternalServerError() *ConnectVropsWithDomainInternalServerError {
	return &ConnectVropsWithDomainInternalServerError{}
}

/*
ConnectVropsWithDomainInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ConnectVropsWithDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this connect vrops with domain internal server error response has a 2xx status code
func (o *ConnectVropsWithDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this connect vrops with domain internal server error response has a 3xx status code
func (o *ConnectVropsWithDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this connect vrops with domain internal server error response has a 4xx status code
func (o *ConnectVropsWithDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this connect vrops with domain internal server error response has a 5xx status code
func (o *ConnectVropsWithDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this connect vrops with domain internal server error response a status code equal to that given
func (o *ConnectVropsWithDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ConnectVropsWithDomainInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *ConnectVropsWithDomainInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/vrops/domains][%d] connectVropsWithDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *ConnectVropsWithDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConnectVropsWithDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
