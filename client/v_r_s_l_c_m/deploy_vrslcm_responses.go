// Code generated by go-swagger; DO NOT EDIT.

package v_r_s_l_c_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// DeployVrslcmReader is a Reader for the DeployVrslcm structure.
type DeployVrslcmReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployVrslcmReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDeployVrslcmAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeployVrslcmBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeployVrslcmMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeployVrslcmInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeployVrslcmAccepted creates a DeployVrslcmAccepted with default headers values
func NewDeployVrslcmAccepted() *DeployVrslcmAccepted {
	return &DeployVrslcmAccepted{}
}

/*
DeployVrslcmAccepted describes a response with status code 202, with default header values.

Accepted
*/
type DeployVrslcmAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this deploy vrslcm accepted response has a 2xx status code
func (o *DeployVrslcmAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deploy vrslcm accepted response has a 3xx status code
func (o *DeployVrslcmAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy vrslcm accepted response has a 4xx status code
func (o *DeployVrslcmAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy vrslcm accepted response has a 5xx status code
func (o *DeployVrslcmAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy vrslcm accepted response a status code equal to that given
func (o *DeployVrslcmAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *DeployVrslcmAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmAccepted  %+v", 202, o.Payload)
}

func (o *DeployVrslcmAccepted) String() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmAccepted  %+v", 202, o.Payload)
}

func (o *DeployVrslcmAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *DeployVrslcmAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployVrslcmBadRequest creates a DeployVrslcmBadRequest with default headers values
func NewDeployVrslcmBadRequest() *DeployVrslcmBadRequest {
	return &DeployVrslcmBadRequest{}
}

/*
DeployVrslcmBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeployVrslcmBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this deploy vrslcm bad request response has a 2xx status code
func (o *DeployVrslcmBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy vrslcm bad request response has a 3xx status code
func (o *DeployVrslcmBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy vrslcm bad request response has a 4xx status code
func (o *DeployVrslcmBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy vrslcm bad request response has a 5xx status code
func (o *DeployVrslcmBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy vrslcm bad request response a status code equal to that given
func (o *DeployVrslcmBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeployVrslcmBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmBadRequest  %+v", 400, o.Payload)
}

func (o *DeployVrslcmBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmBadRequest  %+v", 400, o.Payload)
}

func (o *DeployVrslcmBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeployVrslcmBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployVrslcmMethodNotAllowed creates a DeployVrslcmMethodNotAllowed with default headers values
func NewDeployVrslcmMethodNotAllowed() *DeployVrslcmMethodNotAllowed {
	return &DeployVrslcmMethodNotAllowed{}
}

/*
DeployVrslcmMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeployVrslcmMethodNotAllowed struct {
	Payload *models.Error
}

// IsSuccess returns true when this deploy vrslcm method not allowed response has a 2xx status code
func (o *DeployVrslcmMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy vrslcm method not allowed response has a 3xx status code
func (o *DeployVrslcmMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy vrslcm method not allowed response has a 4xx status code
func (o *DeployVrslcmMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy vrslcm method not allowed response has a 5xx status code
func (o *DeployVrslcmMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy vrslcm method not allowed response a status code equal to that given
func (o *DeployVrslcmMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *DeployVrslcmMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeployVrslcmMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeployVrslcmMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeployVrslcmMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployVrslcmInternalServerError creates a DeployVrslcmInternalServerError with default headers values
func NewDeployVrslcmInternalServerError() *DeployVrslcmInternalServerError {
	return &DeployVrslcmInternalServerError{}
}

/*
DeployVrslcmInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeployVrslcmInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this deploy vrslcm internal server error response has a 2xx status code
func (o *DeployVrslcmInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy vrslcm internal server error response has a 3xx status code
func (o *DeployVrslcmInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy vrslcm internal server error response has a 4xx status code
func (o *DeployVrslcmInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy vrslcm internal server error response has a 5xx status code
func (o *DeployVrslcmInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deploy vrslcm internal server error response a status code equal to that given
func (o *DeployVrslcmInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeployVrslcmInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmInternalServerError  %+v", 500, o.Payload)
}

func (o *DeployVrslcmInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/vrslcms][%d] deployVrslcmInternalServerError  %+v", 500, o.Payload)
}

func (o *DeployVrslcmInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeployVrslcmInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
