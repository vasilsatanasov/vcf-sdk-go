// Code generated by go-swagger; DO NOT EDIT.

package v_r_s_l_c_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// NewUpdateVrslcmVersionByIDInInventoryParams creates a new UpdateVrslcmVersionByIDInInventoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateVrslcmVersionByIDInInventoryParams() *UpdateVrslcmVersionByIDInInventoryParams {
	return &UpdateVrslcmVersionByIDInInventoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateVrslcmVersionByIDInInventoryParamsWithTimeout creates a new UpdateVrslcmVersionByIDInInventoryParams object
// with the ability to set a timeout on a request.
func NewUpdateVrslcmVersionByIDInInventoryParamsWithTimeout(timeout time.Duration) *UpdateVrslcmVersionByIDInInventoryParams {
	return &UpdateVrslcmVersionByIDInInventoryParams{
		timeout: timeout,
	}
}

// NewUpdateVrslcmVersionByIDInInventoryParamsWithContext creates a new UpdateVrslcmVersionByIDInInventoryParams object
// with the ability to set a context for a request.
func NewUpdateVrslcmVersionByIDInInventoryParamsWithContext(ctx context.Context) *UpdateVrslcmVersionByIDInInventoryParams {
	return &UpdateVrslcmVersionByIDInInventoryParams{
		Context: ctx,
	}
}

// NewUpdateVrslcmVersionByIDInInventoryParamsWithHTTPClient creates a new UpdateVrslcmVersionByIDInInventoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateVrslcmVersionByIDInInventoryParamsWithHTTPClient(client *http.Client) *UpdateVrslcmVersionByIDInInventoryParams {
	return &UpdateVrslcmVersionByIDInInventoryParams{
		HTTPClient: client,
	}
}

/*
UpdateVrslcmVersionByIDInInventoryParams contains all the parameters to send to the API endpoint

	for the update vrslcm version by Id in inventory operation.

	Typically these are written to a http.Request.
*/
type UpdateVrslcmVersionByIDInInventoryParams struct {

	/* ID.

	   the ID of vRealize Suite Lifecycle Manager instance
	*/
	ID string

	/* VrslcmDto.

	   vrslcmDto
	*/
	VrslcmDto *models.Vrslcm

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update vrslcm version by Id in inventory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVrslcmVersionByIDInInventoryParams) WithDefaults() *UpdateVrslcmVersionByIDInInventoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update vrslcm version by Id in inventory params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVrslcmVersionByIDInInventoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) WithTimeout(timeout time.Duration) *UpdateVrslcmVersionByIDInInventoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) WithContext(ctx context.Context) *UpdateVrslcmVersionByIDInInventoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) WithHTTPClient(client *http.Client) *UpdateVrslcmVersionByIDInInventoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) WithID(id string) *UpdateVrslcmVersionByIDInInventoryParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) SetID(id string) {
	o.ID = id
}

// WithVrslcmDto adds the vrslcmDto to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) WithVrslcmDto(vrslcmDto *models.Vrslcm) *UpdateVrslcmVersionByIDInInventoryParams {
	o.SetVrslcmDto(vrslcmDto)
	return o
}

// SetVrslcmDto adds the vrslcmDto to the update vrslcm version by Id in inventory params
func (o *UpdateVrslcmVersionByIDInInventoryParams) SetVrslcmDto(vrslcmDto *models.Vrslcm) {
	o.VrslcmDto = vrslcmDto
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateVrslcmVersionByIDInInventoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	if o.VrslcmDto != nil {
		if err := r.SetBodyParam(o.VrslcmDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
