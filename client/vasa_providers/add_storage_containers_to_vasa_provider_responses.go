// Code generated by go-swagger; DO NOT EDIT.

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// AddStorageContainersToVasaProviderReader is a Reader for the AddStorageContainersToVasaProvider structure.
type AddStorageContainersToVasaProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddStorageContainersToVasaProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddStorageContainersToVasaProviderCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddStorageContainersToVasaProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddStorageContainersToVasaProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddStorageContainersToVasaProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddStorageContainersToVasaProviderCreated creates a AddStorageContainersToVasaProviderCreated with default headers values
func NewAddStorageContainersToVasaProviderCreated() *AddStorageContainersToVasaProviderCreated {
	return &AddStorageContainersToVasaProviderCreated{}
}

/*
AddStorageContainersToVasaProviderCreated describes a response with status code 201, with default header values.

Created
*/
type AddStorageContainersToVasaProviderCreated struct {
	Payload *models.VasaProvider
}

// IsSuccess returns true when this add storage containers to vasa provider created response has a 2xx status code
func (o *AddStorageContainersToVasaProviderCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add storage containers to vasa provider created response has a 3xx status code
func (o *AddStorageContainersToVasaProviderCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add storage containers to vasa provider created response has a 4xx status code
func (o *AddStorageContainersToVasaProviderCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add storage containers to vasa provider created response has a 5xx status code
func (o *AddStorageContainersToVasaProviderCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add storage containers to vasa provider created response a status code equal to that given
func (o *AddStorageContainersToVasaProviderCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddStorageContainersToVasaProviderCreated) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderCreated  %+v", 201, o.Payload)
}

func (o *AddStorageContainersToVasaProviderCreated) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderCreated  %+v", 201, o.Payload)
}

func (o *AddStorageContainersToVasaProviderCreated) GetPayload() *models.VasaProvider {
	return o.Payload
}

func (o *AddStorageContainersToVasaProviderCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VasaProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddStorageContainersToVasaProviderBadRequest creates a AddStorageContainersToVasaProviderBadRequest with default headers values
func NewAddStorageContainersToVasaProviderBadRequest() *AddStorageContainersToVasaProviderBadRequest {
	return &AddStorageContainersToVasaProviderBadRequest{}
}

/*
AddStorageContainersToVasaProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddStorageContainersToVasaProviderBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add storage containers to vasa provider bad request response has a 2xx status code
func (o *AddStorageContainersToVasaProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add storage containers to vasa provider bad request response has a 3xx status code
func (o *AddStorageContainersToVasaProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add storage containers to vasa provider bad request response has a 4xx status code
func (o *AddStorageContainersToVasaProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add storage containers to vasa provider bad request response has a 5xx status code
func (o *AddStorageContainersToVasaProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add storage containers to vasa provider bad request response a status code equal to that given
func (o *AddStorageContainersToVasaProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddStorageContainersToVasaProviderBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *AddStorageContainersToVasaProviderBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *AddStorageContainersToVasaProviderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddStorageContainersToVasaProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddStorageContainersToVasaProviderNotFound creates a AddStorageContainersToVasaProviderNotFound with default headers values
func NewAddStorageContainersToVasaProviderNotFound() *AddStorageContainersToVasaProviderNotFound {
	return &AddStorageContainersToVasaProviderNotFound{}
}

/*
AddStorageContainersToVasaProviderNotFound describes a response with status code 404, with default header values.

VASA Provider not found
*/
type AddStorageContainersToVasaProviderNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this add storage containers to vasa provider not found response has a 2xx status code
func (o *AddStorageContainersToVasaProviderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add storage containers to vasa provider not found response has a 3xx status code
func (o *AddStorageContainersToVasaProviderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add storage containers to vasa provider not found response has a 4xx status code
func (o *AddStorageContainersToVasaProviderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add storage containers to vasa provider not found response has a 5xx status code
func (o *AddStorageContainersToVasaProviderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add storage containers to vasa provider not found response a status code equal to that given
func (o *AddStorageContainersToVasaProviderNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AddStorageContainersToVasaProviderNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *AddStorageContainersToVasaProviderNotFound) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *AddStorageContainersToVasaProviderNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddStorageContainersToVasaProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddStorageContainersToVasaProviderInternalServerError creates a AddStorageContainersToVasaProviderInternalServerError with default headers values
func NewAddStorageContainersToVasaProviderInternalServerError() *AddStorageContainersToVasaProviderInternalServerError {
	return &AddStorageContainersToVasaProviderInternalServerError{}
}

/*
AddStorageContainersToVasaProviderInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type AddStorageContainersToVasaProviderInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add storage containers to vasa provider internal server error response has a 2xx status code
func (o *AddStorageContainersToVasaProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add storage containers to vasa provider internal server error response has a 3xx status code
func (o *AddStorageContainersToVasaProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add storage containers to vasa provider internal server error response has a 4xx status code
func (o *AddStorageContainersToVasaProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add storage containers to vasa provider internal server error response has a 5xx status code
func (o *AddStorageContainersToVasaProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add storage containers to vasa provider internal server error response a status code equal to that given
func (o *AddStorageContainersToVasaProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddStorageContainersToVasaProviderInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *AddStorageContainersToVasaProviderInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers/{id}/storage-containers][%d] addStorageContainersToVasaProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *AddStorageContainersToVasaProviderInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddStorageContainersToVasaProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
