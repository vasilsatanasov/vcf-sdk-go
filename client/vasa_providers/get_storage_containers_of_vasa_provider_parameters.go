// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGETStorageContainersOfVasaProviderParams creates a new GETStorageContainersOfVasaProviderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGETStorageContainersOfVasaProviderParams() *GETStorageContainersOfVasaProviderParams {
	return &GETStorageContainersOfVasaProviderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGETStorageContainersOfVasaProviderParamsWithTimeout creates a new GETStorageContainersOfVasaProviderParams object
// with the ability to set a timeout on a request.
func NewGETStorageContainersOfVasaProviderParamsWithTimeout(timeout time.Duration) *GETStorageContainersOfVasaProviderParams {
	return &GETStorageContainersOfVasaProviderParams{
		timeout: timeout,
	}
}

// NewGETStorageContainersOfVasaProviderParamsWithContext creates a new GETStorageContainersOfVasaProviderParams object
// with the ability to set a context for a request.
func NewGETStorageContainersOfVasaProviderParamsWithContext(ctx context.Context) *GETStorageContainersOfVasaProviderParams {
	return &GETStorageContainersOfVasaProviderParams{
		Context: ctx,
	}
}

// NewGETStorageContainersOfVasaProviderParamsWithHTTPClient creates a new GETStorageContainersOfVasaProviderParams object
// with the ability to set a custom HTTPClient for a request.
func NewGETStorageContainersOfVasaProviderParamsWithHTTPClient(client *http.Client) *GETStorageContainersOfVasaProviderParams {
	return &GETStorageContainersOfVasaProviderParams{
		HTTPClient: client,
	}
}

/*
GETStorageContainersOfVasaProviderParams contains all the parameters to send to the API endpoint

	for the get storage containers of vasa provider operation.

	Typically these are written to a http.Request.
*/
type GETStorageContainersOfVasaProviderParams struct {

	/* ID.

	   VASA Provider ID
	*/
	ID string

	/* ProtocolType.

	   Pass an optional Storage Protocol type
	*/
	ProtocolType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get storage containers of vasa provider params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GETStorageContainersOfVasaProviderParams) WithDefaults() *GETStorageContainersOfVasaProviderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get storage containers of vasa provider params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GETStorageContainersOfVasaProviderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) WithTimeout(timeout time.Duration) *GETStorageContainersOfVasaProviderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) WithContext(ctx context.Context) *GETStorageContainersOfVasaProviderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) WithHTTPClient(client *http.Client) *GETStorageContainersOfVasaProviderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) WithID(id string) *GETStorageContainersOfVasaProviderParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) SetID(id string) {
	o.ID = id
}

// WithProtocolType adds the protocolType to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) WithProtocolType(protocolType *string) *GETStorageContainersOfVasaProviderParams {
	o.SetProtocolType(protocolType)
	return o
}

// SetProtocolType adds the protocolType to the get storage containers of vasa provider params
func (o *GETStorageContainersOfVasaProviderParams) SetProtocolType(protocolType *string) {
	o.ProtocolType = protocolType
}

// WriteToRequest writes these params to a swagger request
func (o *GETStorageContainersOfVasaProviderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.ProtocolType != nil {

		// query param protocolType
		var qrProtocolType string

		if o.ProtocolType != nil {
			qrProtocolType = *o.ProtocolType
		}
		qProtocolType := qrProtocolType
		if qProtocolType != "" {

			if err := r.SetQueryParam("protocolType", qProtocolType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
