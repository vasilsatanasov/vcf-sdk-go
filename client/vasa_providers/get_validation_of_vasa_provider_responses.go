// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// GETValidationOfVasaProviderReader is a Reader for the GETValidationOfVasaProvider structure.
type GETValidationOfVasaProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GETValidationOfVasaProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGETValidationOfVasaProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGETValidationOfVasaProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGETValidationOfVasaProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGETValidationOfVasaProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGETValidationOfVasaProviderOK creates a GETValidationOfVasaProviderOK with default headers values
func NewGETValidationOfVasaProviderOK() *GETValidationOfVasaProviderOK {
	return &GETValidationOfVasaProviderOK{}
}

/*
GETValidationOfVasaProviderOK describes a response with status code 200, with default header values.

OK
*/
type GETValidationOfVasaProviderOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this get validation of vasa provider o k response has a 2xx status code
func (o *GETValidationOfVasaProviderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get validation of vasa provider o k response has a 3xx status code
func (o *GETValidationOfVasaProviderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider o k response has a 4xx status code
func (o *GETValidationOfVasaProviderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validation of vasa provider o k response has a 5xx status code
func (o *GETValidationOfVasaProviderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of vasa provider o k response a status code equal to that given
func (o *GETValidationOfVasaProviderOK) IsCode(code int) bool {
	return code == 200
}

func (o *GETValidationOfVasaProviderOK) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderOK  %+v", 200, o.Payload)
}

func (o *GETValidationOfVasaProviderOK) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderOK  %+v", 200, o.Payload)
}

func (o *GETValidationOfVasaProviderOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *GETValidationOfVasaProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationOfVasaProviderBadRequest creates a GETValidationOfVasaProviderBadRequest with default headers values
func NewGETValidationOfVasaProviderBadRequest() *GETValidationOfVasaProviderBadRequest {
	return &GETValidationOfVasaProviderBadRequest{}
}

/*
GETValidationOfVasaProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GETValidationOfVasaProviderBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get validation of vasa provider bad request response has a 2xx status code
func (o *GETValidationOfVasaProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of vasa provider bad request response has a 3xx status code
func (o *GETValidationOfVasaProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider bad request response has a 4xx status code
func (o *GETValidationOfVasaProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validation of vasa provider bad request response has a 5xx status code
func (o *GETValidationOfVasaProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of vasa provider bad request response a status code equal to that given
func (o *GETValidationOfVasaProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GETValidationOfVasaProviderBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *GETValidationOfVasaProviderBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *GETValidationOfVasaProviderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETValidationOfVasaProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationOfVasaProviderNotFound creates a GETValidationOfVasaProviderNotFound with default headers values
func NewGETValidationOfVasaProviderNotFound() *GETValidationOfVasaProviderNotFound {
	return &GETValidationOfVasaProviderNotFound{}
}

/*
GETValidationOfVasaProviderNotFound describes a response with status code 404, with default header values.

Validation ID not found
*/
type GETValidationOfVasaProviderNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get validation of vasa provider not found response has a 2xx status code
func (o *GETValidationOfVasaProviderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of vasa provider not found response has a 3xx status code
func (o *GETValidationOfVasaProviderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider not found response has a 4xx status code
func (o *GETValidationOfVasaProviderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validation of vasa provider not found response has a 5xx status code
func (o *GETValidationOfVasaProviderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of vasa provider not found response a status code equal to that given
func (o *GETValidationOfVasaProviderNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GETValidationOfVasaProviderNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *GETValidationOfVasaProviderNotFound) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *GETValidationOfVasaProviderNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GETValidationOfVasaProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGETValidationOfVasaProviderInternalServerError creates a GETValidationOfVasaProviderInternalServerError with default headers values
func NewGETValidationOfVasaProviderInternalServerError() *GETValidationOfVasaProviderInternalServerError {
	return &GETValidationOfVasaProviderInternalServerError{}
}

/*
GETValidationOfVasaProviderInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GETValidationOfVasaProviderInternalServerError struct {
}

// IsSuccess returns true when this get validation of vasa provider internal server error response has a 2xx status code
func (o *GETValidationOfVasaProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of vasa provider internal server error response has a 3xx status code
func (o *GETValidationOfVasaProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider internal server error response has a 4xx status code
func (o *GETValidationOfVasaProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validation of vasa provider internal server error response has a 5xx status code
func (o *GETValidationOfVasaProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get validation of vasa provider internal server error response a status code equal to that given
func (o *GETValidationOfVasaProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GETValidationOfVasaProviderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderInternalServerError ", 500)
}

func (o *GETValidationOfVasaProviderInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderInternalServerError ", 500)
}

func (o *GETValidationOfVasaProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
