// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"vcf-sdk-go/models"
)

// UpdateStorageContainerOfVasaProviderReader is a Reader for the UpdateStorageContainerOfVasaProvider structure.
type UpdateStorageContainerOfVasaProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStorageContainerOfVasaProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateStorageContainerOfVasaProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateStorageContainerOfVasaProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateStorageContainerOfVasaProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateStorageContainerOfVasaProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateStorageContainerOfVasaProviderOK creates a UpdateStorageContainerOfVasaProviderOK with default headers values
func NewUpdateStorageContainerOfVasaProviderOK() *UpdateStorageContainerOfVasaProviderOK {
	return &UpdateStorageContainerOfVasaProviderOK{}
}

/*
UpdateStorageContainerOfVasaProviderOK describes a response with status code 200, with default header values.

Ok
*/
type UpdateStorageContainerOfVasaProviderOK struct {
	Payload *models.VasaProvider
}

// IsSuccess returns true when this update storage container of vasa provider o k response has a 2xx status code
func (o *UpdateStorageContainerOfVasaProviderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update storage container of vasa provider o k response has a 3xx status code
func (o *UpdateStorageContainerOfVasaProviderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update storage container of vasa provider o k response has a 4xx status code
func (o *UpdateStorageContainerOfVasaProviderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update storage container of vasa provider o k response has a 5xx status code
func (o *UpdateStorageContainerOfVasaProviderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update storage container of vasa provider o k response a status code equal to that given
func (o *UpdateStorageContainerOfVasaProviderOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateStorageContainerOfVasaProviderOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderOK  %+v", 200, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderOK) String() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderOK  %+v", 200, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderOK) GetPayload() *models.VasaProvider {
	return o.Payload
}

func (o *UpdateStorageContainerOfVasaProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VasaProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStorageContainerOfVasaProviderBadRequest creates a UpdateStorageContainerOfVasaProviderBadRequest with default headers values
func NewUpdateStorageContainerOfVasaProviderBadRequest() *UpdateStorageContainerOfVasaProviderBadRequest {
	return &UpdateStorageContainerOfVasaProviderBadRequest{}
}

/*
UpdateStorageContainerOfVasaProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateStorageContainerOfVasaProviderBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update storage container of vasa provider bad request response has a 2xx status code
func (o *UpdateStorageContainerOfVasaProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update storage container of vasa provider bad request response has a 3xx status code
func (o *UpdateStorageContainerOfVasaProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update storage container of vasa provider bad request response has a 4xx status code
func (o *UpdateStorageContainerOfVasaProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update storage container of vasa provider bad request response has a 5xx status code
func (o *UpdateStorageContainerOfVasaProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update storage container of vasa provider bad request response a status code equal to that given
func (o *UpdateStorageContainerOfVasaProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateStorageContainerOfVasaProviderBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStorageContainerOfVasaProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStorageContainerOfVasaProviderNotFound creates a UpdateStorageContainerOfVasaProviderNotFound with default headers values
func NewUpdateStorageContainerOfVasaProviderNotFound() *UpdateStorageContainerOfVasaProviderNotFound {
	return &UpdateStorageContainerOfVasaProviderNotFound{}
}

/*
UpdateStorageContainerOfVasaProviderNotFound describes a response with status code 404, with default header values.

Storage container not found
*/
type UpdateStorageContainerOfVasaProviderNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update storage container of vasa provider not found response has a 2xx status code
func (o *UpdateStorageContainerOfVasaProviderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update storage container of vasa provider not found response has a 3xx status code
func (o *UpdateStorageContainerOfVasaProviderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update storage container of vasa provider not found response has a 4xx status code
func (o *UpdateStorageContainerOfVasaProviderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update storage container of vasa provider not found response has a 5xx status code
func (o *UpdateStorageContainerOfVasaProviderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update storage container of vasa provider not found response a status code equal to that given
func (o *UpdateStorageContainerOfVasaProviderNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateStorageContainerOfVasaProviderNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderNotFound) String() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStorageContainerOfVasaProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStorageContainerOfVasaProviderInternalServerError creates a UpdateStorageContainerOfVasaProviderInternalServerError with default headers values
func NewUpdateStorageContainerOfVasaProviderInternalServerError() *UpdateStorageContainerOfVasaProviderInternalServerError {
	return &UpdateStorageContainerOfVasaProviderInternalServerError{}
}

/*
UpdateStorageContainerOfVasaProviderInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type UpdateStorageContainerOfVasaProviderInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update storage container of vasa provider internal server error response has a 2xx status code
func (o *UpdateStorageContainerOfVasaProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update storage container of vasa provider internal server error response has a 3xx status code
func (o *UpdateStorageContainerOfVasaProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update storage container of vasa provider internal server error response has a 4xx status code
func (o *UpdateStorageContainerOfVasaProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update storage container of vasa provider internal server error response has a 5xx status code
func (o *UpdateStorageContainerOfVasaProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update storage container of vasa provider internal server error response a status code equal to that given
func (o *UpdateStorageContainerOfVasaProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateStorageContainerOfVasaProviderInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/vasa-providers/{id}/storage-containers/{storageContainerId}][%d] updateStorageContainerOfVasaProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateStorageContainerOfVasaProviderInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStorageContainerOfVasaProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
