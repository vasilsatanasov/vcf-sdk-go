// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package vsan_health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// SetHealthCheckStatusReader is a Reader for the SetHealthCheckStatus structure.
type SetHealthCheckStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetHealthCheckStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetHealthCheckStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewSetHealthCheckStatusAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetHealthCheckStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetHealthCheckStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSetHealthCheckStatusOK creates a SetHealthCheckStatusOK with default headers values
func NewSetHealthCheckStatusOK() *SetHealthCheckStatusOK {
	return &SetHealthCheckStatusOK{}
}

/*
SetHealthCheckStatusOK describes a response with status code 200, with default header values.

OK
*/
type SetHealthCheckStatusOK struct {
	Payload *models.HealthCheckTask
}

// IsSuccess returns true when this set health check status o k response has a 2xx status code
func (o *SetHealthCheckStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set health check status o k response has a 3xx status code
func (o *SetHealthCheckStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set health check status o k response has a 4xx status code
func (o *SetHealthCheckStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set health check status o k response has a 5xx status code
func (o *SetHealthCheckStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set health check status o k response a status code equal to that given
func (o *SetHealthCheckStatusOK) IsCode(code int) bool {
	return code == 200
}

func (o *SetHealthCheckStatusOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusOK  %+v", 200, o.Payload)
}

func (o *SetHealthCheckStatusOK) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusOK  %+v", 200, o.Payload)
}

func (o *SetHealthCheckStatusOK) GetPayload() *models.HealthCheckTask {
	return o.Payload
}

func (o *SetHealthCheckStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetHealthCheckStatusAccepted creates a SetHealthCheckStatusAccepted with default headers values
func NewSetHealthCheckStatusAccepted() *SetHealthCheckStatusAccepted {
	return &SetHealthCheckStatusAccepted{}
}

/*
SetHealthCheckStatusAccepted describes a response with status code 202, with default header values.

Accepted
*/
type SetHealthCheckStatusAccepted struct {
	Payload *models.HealthCheckTask
}

// IsSuccess returns true when this set health check status accepted response has a 2xx status code
func (o *SetHealthCheckStatusAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set health check status accepted response has a 3xx status code
func (o *SetHealthCheckStatusAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set health check status accepted response has a 4xx status code
func (o *SetHealthCheckStatusAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this set health check status accepted response has a 5xx status code
func (o *SetHealthCheckStatusAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this set health check status accepted response a status code equal to that given
func (o *SetHealthCheckStatusAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *SetHealthCheckStatusAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusAccepted  %+v", 202, o.Payload)
}

func (o *SetHealthCheckStatusAccepted) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusAccepted  %+v", 202, o.Payload)
}

func (o *SetHealthCheckStatusAccepted) GetPayload() *models.HealthCheckTask {
	return o.Payload
}

func (o *SetHealthCheckStatusAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetHealthCheckStatusBadRequest creates a SetHealthCheckStatusBadRequest with default headers values
func NewSetHealthCheckStatusBadRequest() *SetHealthCheckStatusBadRequest {
	return &SetHealthCheckStatusBadRequest{}
}

/*
SetHealthCheckStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SetHealthCheckStatusBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set health check status bad request response has a 2xx status code
func (o *SetHealthCheckStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set health check status bad request response has a 3xx status code
func (o *SetHealthCheckStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set health check status bad request response has a 4xx status code
func (o *SetHealthCheckStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set health check status bad request response has a 5xx status code
func (o *SetHealthCheckStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set health check status bad request response a status code equal to that given
func (o *SetHealthCheckStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SetHealthCheckStatusBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusBadRequest  %+v", 400, o.Payload)
}

func (o *SetHealthCheckStatusBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusBadRequest  %+v", 400, o.Payload)
}

func (o *SetHealthCheckStatusBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetHealthCheckStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetHealthCheckStatusInternalServerError creates a SetHealthCheckStatusInternalServerError with default headers values
func NewSetHealthCheckStatusInternalServerError() *SetHealthCheckStatusInternalServerError {
	return &SetHealthCheckStatusInternalServerError{}
}

/*
SetHealthCheckStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SetHealthCheckStatusInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this set health check status internal server error response has a 2xx status code
func (o *SetHealthCheckStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set health check status internal server error response has a 3xx status code
func (o *SetHealthCheckStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set health check status internal server error response has a 4xx status code
func (o *SetHealthCheckStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set health check status internal server error response has a 5xx status code
func (o *SetHealthCheckStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set health check status internal server error response a status code equal to that given
func (o *SetHealthCheckStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SetHealthCheckStatusInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *SetHealthCheckStatusInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] setHealthCheckStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *SetHealthCheckStatusInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetHealthCheckStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
