// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DNSServer DNS server details
//
// swagger:model DnsServer
type DNSServer struct {

	// IP address/FQDN of DNS server
	// Example: 10.0.0.250
	// Required: true
	IPAddress *string `json:"ipAddress"`

	// Is DNS server primary
	// Required: true
	IsPrimary *bool `json:"isPrimary"`
}

// Validate validates this Dns server
func (m *DNSServer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIPAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsPrimary(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DNSServer) validateIPAddress(formats strfmt.Registry) error {

	if err := validate.Required("ipAddress", "body", m.IPAddress); err != nil {
		return err
	}

	return nil
}

func (m *DNSServer) validateIsPrimary(formats strfmt.Registry) error {

	if err := validate.Required("isPrimary", "body", m.IsPrimary); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this Dns server based on context it is used
func (m *DNSServer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DNSServer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DNSServer) UnmarshalBinary(b []byte) error {
	var res DNSServer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
