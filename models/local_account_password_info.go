// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LocalAccountPasswordInfo Represents local account and its attributes
//
// swagger:model LocalAccountPasswordInfo
type LocalAccountPasswordInfo struct {

	// The new password of the local account
	// Required: true
	NewPassword *string `json:"newPassword"`

	// The old password of the local account
	OldPassword string `json:"oldPassword,omitempty"`
}

// Validate validates this local account password info
func (m *LocalAccountPasswordInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNewPassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LocalAccountPasswordInfo) validateNewPassword(formats strfmt.Registry) error {

	if err := validate.Required("newPassword", "body", m.NewPassword); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this local account password info based on context it is used
func (m *LocalAccountPasswordInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LocalAccountPasswordInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LocalAccountPasswordInfo) UnmarshalBinary(b []byte) error {
	var res LocalAccountPasswordInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
