// Code generated by go-swagger; DO NOT EDIT.

// Copyright Â© 2023 VMware, Inc. All Rights Reserved.
// Code licenced under: BSD-2

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PersonalityUploadSpecRawWithFileUploadID Personality upload specification for uploading the personality from raw files exported from a vCenter cluster. This mode of uploading personality is useful when the source vCenter cluster is outside the target VCF deployment. User can upload files from a source location to SDDC Manager using v1/personalities/files API, which returns a file upload id. The id is then passed in this spec with Personality Upload Mode RAW_WITH_FILE_UPLOAD_ID.
//
// swagger:model PersonalityUploadSpecRawWithFileUploadId
type PersonalityUploadSpecRawWithFileUploadID struct {

	// Personality file upload id. This id is obtained by calling v1/personalities/files and uploading files into SDDC Manager
	FileUploadID string `json:"fileUploadId,omitempty"`
}

// Validate validates this personality upload spec raw with file upload Id
func (m *PersonalityUploadSpecRawWithFileUploadID) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this personality upload spec raw with file upload Id based on context it is used
func (m *PersonalityUploadSpecRawWithFileUploadID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PersonalityUploadSpecRawWithFileUploadID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PersonalityUploadSpecRawWithFileUploadID) UnmarshalBinary(b []byte) error {
	var res PersonalityUploadSpecRawWithFileUploadID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
