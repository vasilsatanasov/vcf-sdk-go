// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VxRailContext Contains VxRail Specific properties
//
// swagger:model VxRailContext
type VxRailContext struct {

	// Attribute name
	AttributeName string `json:"attributeName,omitempty"`

	// Datatype of attribute value
	// Enum: [INTEGER BOOLEAN STRING]
	Datatype string `json:"datatype,omitempty"`

	// Attribute value
	Value string `json:"value,omitempty"`
}

// Validate validates this vx rail context
func (m *VxRailContext) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatatype(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vxRailContextTypeDatatypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INTEGER","BOOLEAN","STRING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vxRailContextTypeDatatypePropEnum = append(vxRailContextTypeDatatypePropEnum, v)
	}
}

const (

	// VxRailContextDatatypeINTEGER captures enum value "INTEGER"
	VxRailContextDatatypeINTEGER string = "INTEGER"

	// VxRailContextDatatypeBOOLEAN captures enum value "BOOLEAN"
	VxRailContextDatatypeBOOLEAN string = "BOOLEAN"

	// VxRailContextDatatypeSTRING captures enum value "STRING"
	VxRailContextDatatypeSTRING string = "STRING"
)

// prop value enum
func (m *VxRailContext) validateDatatypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vxRailContextTypeDatatypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VxRailContext) validateDatatype(formats strfmt.Registry) error {
	if swag.IsZero(m.Datatype) { // not required
		return nil
	}

	// value enum
	if err := m.validateDatatypeEnum("datatype", "body", m.Datatype); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vx rail context based on context it is used
func (m *VxRailContext) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VxRailContext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VxRailContext) UnmarshalBinary(b []byte) error {
	var res VxRailContext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
